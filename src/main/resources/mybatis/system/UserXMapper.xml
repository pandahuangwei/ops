<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserXMapper">

    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 换皮肤-->
    <update id="setSKIN" parameterType="pd" flushCache="false">
        update TS_USER set
        SKIN = #{SKIN}
        where USERNAME = #{USERNAME}
    </update>

    <!-- 更新登录时间 -->
    <update id="updateLastLogin" parameterType="pd" flushCache="false">
        update TS_USER set
        LAST_LOGIN = #{LAST_LOGIN}
        where USER_ID = #{USER_ID}
          and del_flag = '0'
    </update>

    <!-- 判断用户名和密码 -->
    <select id="getUserInfo" parameterType="pd" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
        select * from TS_USER
        where 1=1
          and del_flag = '0'
        <if test="USERNAME != null and PASSWORD != null">
            and	(
            (USERNAME = #{USERNAME} and PASSWORD = #{PASSWORD})
            or
            (EMAIL = #{USERNAME} and PASSWORD = #{PASSWORD})
            or
            (NUMBER = #{USERNAME} and PASSWORD = #{PASSWORD})
            )
        </if>
        <if test="USER_ID != null and USER_ID != ''">
            and USER_ID = #{USER_ID}
        </if>
    </select>



    <!-- 存入IP -->
    <update id="saveIP" parameterType="pd" flushCache="false">
        update TS_USER
        set
        IP = #{IP}
        where
        USERNAME = #{USERNAME}
        and del_flag = '0'
    </update>

    <!-- 修改 -->
    <update id="editU" parameterType="pd" flushCache="false">
        update  TS_USER
        set USERNAME				= #{USERNAME},
        NAME 					= #{NAME},
        ROLE_ID 				= #{ROLE_ID},
        BZ						= #{BZ},
        EMAIL					= #{EMAIL},
        NUMBER					= #{NUMBER},
        PHONE					= #{PHONE},
        OUT_CUSTOMER			= #{OUT_CUSTOMER},
        CUSTOMER_ID				= #{CUSTOMER_ID}
        <if test="PASSWORD != null and PASSWORD != ''">
            ,PASSWORD				= #{PASSWORD}
        </if>
        where
        USER_ID = #{USER_ID}
        and del_flag = '0'
    </update>

    <!-- 通过user_id获取数据 -->
    <select id="findByUiId" parameterType="pd" resultType="pd" useCache="false">
        select
        USER_ID,
        USERNAME,
        PASSWORD,
        NAME,
        RIGHTS,
        ROLE_ID,
        LAST_LOGIN,
        IP,
        STATUS,
        BZ,
        SKIN,
        EMAIL,
        NUMBER,
        PHONE,OUT_CUSTOMER,CUSTOMER_ID
        from
        TS_USER
        where
        USER_ID = #{USER_ID}
        and del_flag = '0'
    </select>

    <!-- 通过邮箱获取数据 -->
    <select id="findByUE" parameterType="pd" resultType="pd" useCache="false">
        select
        USER_ID,
        USERNAME,
        PASSWORD,
        NAME,
        RIGHTS,
        ROLE_ID,
        LAST_LOGIN,
        IP,
        STATUS,
        BZ,
        SKIN,
        EMAIL,
        NUMBER,
        PHONE,OUT_CUSTOMER,CUSTOMER_ID
        from
        TS_USER
        where
        EMAIL = #{EMAIL}
        and del_flag = '0'
        <if test="USERNAME != null and USERNAME != ''">
            and USERNAME != #{USERNAME}
        </if>
    </select>

    <!-- 通过编号获取数据 -->
    <select id="findByUN" parameterType="pd" resultType="pd" useCache="false">
        select
        USER_ID,
        USERNAME,
        PASSWORD,
        NAME,
        RIGHTS,
        ROLE_ID,
        LAST_LOGIN,
        IP,
        STATUS,
        BZ,
        SKIN,
        EMAIL,
        NUMBER,
        PHONE,OUT_CUSTOMER,CUSTOMER_ID
        from
        TS_USER
        where
        NUMBER = #{NUMBER}
        and del_flag = '0'
        <if test="USERNAME != null and USERNAME != ''">
            and USERNAME != #{USERNAME}
        </if>
    </select>

    <!-- 通过USERNAME获取数据 -->
    <select id="findByUId" parameterType="pd" resultType="pd" useCache="false">
        select
        USER_ID,
        USERNAME,
        PASSWORD,
        NAME,
        RIGHTS,
        ROLE_ID,
        LAST_LOGIN,
        IP,
        STATUS,
        BZ,
        SKIN,
        EMAIL,
        NUMBER,
        PHONE,OUT_CUSTOMER,CUSTOMER_ID
        from
        TS_USER
        where del_flag = '0'
        and USERNAME = #{USERNAME}

    </select>

    <!-- 新增用户 -->
    <insert id="saveU" parameterType="pd" flushCache="false">
        insert into TS_USER (
        USER_ID,
        USERNAME,
        PASSWORD,
        NAME,
        RIGHTS,
        ROLE_ID,
        LAST_LOGIN,
        IP,
        STATUS,
        BZ,
        SKIN,
        EMAIL,
        NUMBER,
        PHONE,
        DEL_FLAG,
        OUT_CUSTOMER,
        CUSTOMER_ID
        ) values (
        #{USER_ID},
        #{USERNAME},
        #{PASSWORD},
        #{NAME},
        #{RIGHTS},
        #{ROLE_ID},
        #{LAST_LOGIN},
        #{IP},
        #{STATUS},
        #{BZ},
        #{SKIN},
        #{EMAIL},
        #{NUMBER},
        #{PHONE},
        '0',
        #{OUT_CUSTOMER},
        #{CUSTOMER_ID}
        )
    </insert>
    <!-- 用户列表(用户组) -->
    <select id="userlistPage" parameterType="page" resultType="pd" useCache="false">
        select  u.USER_ID,
        u.USERNAME,
        u.PASSWORD,
        u.LAST_LOGIN,
        u.NAME,
        u.IP,
        u.EMAIL,
        u.NUMBER,
        u.PHONE,
        r.ROLE_ID,
        r.ROLE_NAME
        from TS_USER u, TS_ROLE r
        where u.ROLE_ID = r.ROLE_ID
        and u.USERNAME != 'administrator'
        and (r.ROLE_ID != '7' and r.PARENT_ID != '7')
        and del_flag = '0'
        <if test="pd.USERNAME != null and pd.USERNAME != ''"><!-- 关键词检索 -->
            and
            (
            u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
            or
            u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
            or
            u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
            or
            u.NAME LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
            or
            u.PHONE LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
            )
        </if>
        <if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
            and u.ROLE_ID=#{pd.ROLE_ID}
        </if>
        <if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
            and u.LAST_LOGIN &gt;= #{pd.lastLoginStart}
        </if>
        <if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
            and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd}
        </if>
        order by u.LAST_LOGIN desc
    </select>

    <!-- 用户列表(全部) -->
    <select id="listAllUser" parameterType="pd" resultType="pd" useCache="false">
        select  u.USER_ID,
        u.USERNAME,
        u.PASSWORD,
        u.LAST_LOGIN,
        u.NAME,
        u.IP,
        u.EMAIL,
        u.NUMBER,
        u.PHONE,
        r.ROLE_ID,
        r.ROLE_NAME
        from TS_USER u, TS_ROLE r
        where u.ROLE_ID = r.ROLE_ID
        and u.USERNAME != 'administrator'
        and (r.ROLE_ID != '7' and r.PARENT_ID != '7')
        and del_flag = '0'
        <if test="USERNAME != null and USERNAME != ''"><!-- 关键词检索 -->
            and
            (
            u.USERNAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
            or
            u.EMAIL LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
            or
            u.NUMBER LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
            or
            u.NAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
            or
            u.PHONE LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
            )
        </if>
        <if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
            and u.ROLE_ID=#{ROLE_ID}
        </if>
        <if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
            and u.LAST_LOGIN &gt;= #{lastLoginStart}
        </if>
        <if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
            and u.LAST_LOGIN &lt;= #{lastLoginEnd}
        </if>
        order by u.LAST_LOGIN desc
    </select>

    <!-- 删除用户 -->
    <delete id="deleteU" parameterType="pd" flushCache="false">
        update TS_USER set del_flag = '1'
        where
        USER_ID = #{USER_ID}
    </delete>

    <!-- 批量删除用户 -->
    <delete id="deleteAllU" parameterType="String" flushCache="false">
        update TS_USER set del_flag = '1'
        where
        USER_ID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>