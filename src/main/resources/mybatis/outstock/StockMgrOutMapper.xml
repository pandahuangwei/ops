<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StockMgrOutMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
	  INSERT INTO TM_STOCKMGROUT
		 (STOCKMGROUT_ID, OUTSTOCK_NO, CUSTOMER_ID, OUTSTOCK_TYPE, PRE_OUT_DATE, REAL_OUT_DATE, OUTSTOCK_WAY, DEPOT_STATE, PICK_STATE,
		  TOTAL_WEIGHT, LOADED_TYPE, TOTAL_SUTTLE, TOTAL_VOLUME, TOTAL_PRICE, TOTAL_EA, PRIORITY_LEVEL, ORDER_NO, COST_STATE, MEMO,
		  CREATE_EMP, CREATE_TM, MODIFY_EMP, MODIFY_TM, DEL_FLG, ASSIGNED_STATE, CARGO_STATE,CONFIRM_STATE)
      VALUES
		 (#{STOCKMGROUT_ID}, #{OUTSTOCK_NO}, #{CUSTOMER_ID}, #{OUTSTOCK_TYPE}, #{PRE_OUT_DATE}, #{REAL_OUT_DATE}, #{OUTSTOCK_WAY}, #{DEPOT_STATE}, #{PICK_STATE},
		 #{TOTAL_WEIGHT}, #{LOADED_TYPE}, #{TOTAL_SUTTLE}, #{TOTAL_VOLUME}, #{TOTAL_PRICE}, #{TOTAL_EA}, #{PRIORITY_LEVEL}, #{ORDER_NO}, #{COST_STATE}, #{MEMO},
		 #{CREATE_EMP}, #{CREATE_TM}, #{MODIFY_EMP}, #{MODIFY_TM}, #{DEL_FLG}, #{ASSIGNED_STATE}, #{CARGO_STATE} , #{CONFIRM_STATE})
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		DELETE FROM TM_STOCKMGROUT
		where ASSIGNED_STATE='100' AND STOCKMGROUT_ID = #{STOCKMGROUT_ID}
	</delete>

	<insert id="saveConfirm" parameterType="pd">
		UPDATE TM_STOCKMGROUT
		SET CONFIRM_STATE = '1',
		    MODIFY_EMP = #{MODIFY_EMP},
		    MODIFY_TM = #{MODIFY_TM},
		    REAL_OUT_DATE = #{REAL_OUT_DATE}
		WHERE STOCKMGROUT_ID = #{STOCKMGROUT_ID}
	</insert>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		UPDATE TM_STOCKMGROUT
	    SET
		CUSTOMER_ID = #{CUSTOMER_ID},
		OUTSTOCK_TYPE = #{OUTSTOCK_TYPE},
		PRE_OUT_DATE = #{PRE_OUT_DATE},
		REAL_OUT_DATE = #{REAL_OUT_DATE},
		OUTSTOCK_WAY = #{OUTSTOCK_WAY},
		TOTAL_WEIGHT = #{TOTAL_WEIGHT},
		LOADED_TYPE = #{LOADED_TYPE},
		TOTAL_SUTTLE = #{TOTAL_SUTTLE},
		TOTAL_VOLUME = #{TOTAL_VOLUME},
		TOTAL_PRICE = #{TOTAL_PRICE},
		TOTAL_EA = #{TOTAL_EA},
		PRIORITY_LEVEL = #{PRIORITY_LEVEL},
		ORDER_NO = #{ORDER_NO},
		COST_STATE = #{COST_STATE},
		MEMO = #{MEMO},
		MODIFY_EMP = #{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM}
	WHERE
	  STOCKMGROUT_ID = #{STOCKMGROUT_ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
	  SELECT
	   A.STOCKMGROUT_ID,A.OUTSTOCK_NO,A.CUSTOMER_ID,A.OUTSTOCK_TYPE,A.PRE_OUT_DATE,A.REAL_OUT_DATE,A.OUTSTOCK_WAY,A.DEPOT_STATE,A.PICK_STATE,
       A.TOTAL_WEIGHT,A.LOADED_TYPE,A.TOTAL_SUTTLE,A.TOTAL_VOLUME,A.TOTAL_PRICE,A.TOTAL_EA,A.PRIORITY_LEVEL,A.ORDER_NO,A.COST_STATE,A.MEMO,
       A.CREATE_EMP,A.CREATE_TM,A.MODIFY_EMP,A.MODIFY_TM,A.ASSIGNED_STATE,A.CONFIRM_STATE,A.CARGO_STATE,
	   B.P_ID, B.ORDERBATCH_TYPE,
	   B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
	   B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
	   B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
	   B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT
    FROM TM_STOCKMGROUT A LEFT JOIN TM_STOCKMGROUT_PROPERTY B ON A.STOCKMGROUT_ID = B.STOCKMGROUT_ID
    WHERE 1 =1 AND  A.STOCKMGROUT_ID =#{STOCKMGROUT_ID} AND  B.ORDERBATCH_TYPE = #{ORDERBATCH_TYPE}
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT DISTINCT A.STOCKMGROUT_ID,A.OUTSTOCK_NO,A.CUSTOMER_ID,A.OUTSTOCK_TYPE,A.PRE_OUT_DATE,A.OUTSTOCK_WAY,A.DEPOT_STATE,A.PICK_STATE,A.CARGO_STATE,
		A.LOADED_TYPE,A.PRIORITY_LEVEL,A.COST_STATE, A.ASSIGNED_STATE,A.SI_REFERENCE
        ,A.TXT_SIX,A.TXT_TWENT
		FROM
		(SELECT DISTINCT
		A.STOCKMGROUT_ID,A.OUTSTOCK_NO,A.CUSTOMER_ID,A.OUTSTOCK_TYPE,A.PRE_OUT_DATE,A.OUTSTOCK_WAY,A.DEPOT_STATE,A.PICK_STATE,A.CARGO_STATE,
		A.LOADED_TYPE,A.PRIORITY_LEVEL,A.COST_STATE, A.ASSIGNED_STATE,r.TXT_TEN SI_REFERENCE
		,r.TXT_SIX,r.TXT_TWENT
		FROM
		TM_STOCKMGROUT A,tm_stockmgrout_property r
		WHERE a.STOCKMGROUT_ID =  r.STOCKMGROUT_ID
		AND r.ORDERBATCH_TYPE='61'
		AND A.DEL_FLG = '0'
		<if test="pd != null and pd.CUSTOMER_ID != null and pd.CUSTOMER_ID != ''">
			AND A.CUSTOMER_ID =#{pd.CUSTOMER_ID}
		</if>
		<if test="pd != null and pd.OUTSTOCK_NO != null and pd.OUTSTOCK_NO != ''">
			AND A.OUTSTOCK_NO LIKE CONCAT(CONCAT('%', #{pd.OUTSTOCK_NO}),'%')
		</if>
		<if test="pd != null and pd.ORDER_NO != null and pd.ORDER_NO != ''">
			AND A.ORDER_NO LIKE CONCAT(CONCAT('%', #{pd.ORDER_NO}),'%')
		</if>
		<if test="pd != null and pd.SI_REFERENCE != null and pd.SI_REFERENCE != ''">
			AND r.TXT_TEN LIKE CONCAT(CONCAT('%', #{pd.SI_REFERENCE}),'%')
		</if>

		<!--  小于号转义 &lt;   大于号: &gt;  -->
		<if test="pd != null and pd.PRE_OUTSTOCK_DATE_BEGIN != null and pd.PRE_OUTSTOCK_DATE_BEGIN != ''">
			<![CDATA[ AND A.PRE_OUT_DATE >= #{pd.PRE_OUTSTOCK_DATE_BEGIN} ]]>
		</if>

		<if test="pd != null and pd.PRE_OUTSTOCK_DATE_END != null and pd.PRE_OUTSTOCK_DATE_END != ''">
			<![CDATA[ AND A.PRE_OUT_DATE <= #{pd.PRE_OUTSTOCK_DATE_END} ]]>
		</if>
		<!--  小于号转义 &lt;   大于号: &gt;  -->
		<if test="pd != null and pd.ACT_OUTSTOCK_DATE_BEGIN != null and pd.ACT_OUTSTOCK_DATE_BEGIN != ''">
			<![CDATA[ AND A.REAL_OUT_DATE >= #{pd.ACT_OUTSTOCK_DATE_BEGIN} ]]>
		</if>

		<if test="pd != null and pd.ACT_OUTSTOCK_DATE_END != null and pd.ACT_OUTSTOCK_DATE_END != ''">
			<![CDATA[ AND A.REAL_OUT_DATE <= #{pd.ACT_OUTSTOCK_DATE_END} ]]>
		</if>

		<!-- 装车状态-->
		<if test="pd.LOADED_TYPE_S != null">
			AND A.LOADED_TYPE IN
			<foreach item="item" index="index" collection="pd.LOADED_TYPE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>

		<!-- 分配状态-->
		<if test="pd.ASSIGNED_STATE_S != null">
			AND A.ASSIGNED_STATE IN
			<foreach item="item" index="index" collection="pd.ASSIGNED_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<!-- 发货状态-->
		<if test="pd.DEPOT_STATE_S != null">
			AND A.DEPOT_STATE IN
			<foreach item="item" index="index" collection="pd.DEPOT_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<!-- 拣货状态-->
		<if test="pd.PICK_STATE_S != null">
			AND A.PICK_STATE IN
			<foreach item="item" index="index" collection="pd.PICK_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<if test="pd.CARGO_STATE_S != null">
			AND A.CARGO_STATE IN
			<foreach item="item" index="index" collection="pd.CARGO_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<!-- 出货类型-->
		<if test="pd.OUTSTOCK_TYPE_S != null">
			AND A.OUTSTOCK_TYPE IN
			<foreach item="item" index="index" collection="pd.OUTSTOCK_TYPE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<!-- 发货方式-->
		<if test="pd.OUTSTOCK_WAY_S != null">
			AND A.OUTSTOCK_WAY IN
			<foreach item="item" index="index" collection="pd.OUTSTOCK_WAY_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<if test="pd != null and pd.TXT_TWENT != null and pd.TXT_TWENT != ''">
			AND r.TXT_TWENT LIKE CONCAT(CONCAT('%', #{pd.TXT_TWENT}),'%')
		</if>
		<if test="pd != null and pd.TXT_SIX != null and pd.TXT_SIX != ''">
			AND r.TXT_SIX LIKE CONCAT(CONCAT('%', #{pd.TXT_SIX}),'%')
		</if>
		) A
		<if test="pd != null and ( (pd.PRODUCT_ID != null and pd.PRODUCT_ID != '') or (pd.DTL_CUSTOMER_ID != null and pd.DTL_CUSTOMER_ID != '') )  ">
		,
		(SELECT DISTINCT STOCKMGROUT_ID FROM TM_STOCKMGROUT_DTL
		  WHERE DEL_FLG = '0'
		<if test="pd != null and pd.DTL_CUSTOMER_ID != null and pd.DTL_CUSTOMER_ID != ''">
			AND CUSTOMER_ID =#{pd.DTL_CUSTOMER_ID}
		</if>
		<if test="pd != null and pd.PRODUCT_ID != null and pd.PRODUCT_ID != ''">
			AND PRODUCT_ID =#{pd.PRODUCT_ID}
		</if>

		) B
		WHERE A.STOCKMGROUT_ID = b.STOCKMGROUT_ID
		</if>
		ORDER BY A.OUTSTOCK_NO DESC
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		  A.STOCKMGROUT_ID,A.OUTSTOCK_NO,A.CUSTOMER_ID,A.OUTSTOCK_TYPE,A.PRE_OUT_DATE,A.REAL_OUT_DATE,A.OUTSTOCK_WAY,A.DEPOT_STATE,A.PICK_STATE,
          A.TOTAL_WEIGHT,A.LOADED_TYPE,A.TOTAL_SUTTLE,A.TOTAL_VOLUME,A.TOTAL_PRICE,A.TOTAL_EA,A.PRIORITY_LEVEL,A.ORDER_NO,A.COST_STATE,A.MEMO,
          A.CREATE_EMP,A.CREATE_TM,A.MODIFY_EMP,A.MODIFY_TM,A.ASSIGNED_STATE
		from
			 TM_STOCKMGROUT A
		WHERE DEL_FLG = '0'
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		DELETE FROM TM_STOCKMGROUT
		where  ASSIGNED_STATE='100' AND
		   STOCKMGROUT_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<!-- 批量删除 -->
	<delete id="deleteDtlAll" parameterType="String">
		DELETE FROM  TM_STOCKMGROUT_DTL
		where ASSIGNED_STATE ='100'
		AND STOCKDTLMGROUT_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!--订单属性操作-->
	<insert id="saveOrderDtl" parameterType="pd">
	INSERT INTO TM_STOCKMGROUT_PROPERTY
	(P_ID,
	STOCKMGROUT_ID,
	ORDERBATCH_TYPE,
	STOCKDTLMGROUT_ID,
	TIME_ONE, 	TIME_TWO, 	TIME_THR, 	TIME_FOU, 	TIME_FIV, 	TIME_SIX, 	TIME_SEV, 	TIME_EIG, 	TIME_NIG, 	TIME_TEN,
	NUM_ONE, 	NUM_TWO, 	NUM_THR, 	NUM_FOU, 	NUM_FIV, 	NUM_SIX, 	NUM_SEV, 	NUM_EIG, 	NUM_NIG, 	NUM_TEN,
	TXT_ONE, 	TXT_TWO, 	TXT_THR, 	TXT_FOU, 	TXT_FIV, 	TXT_SIX, 	TXT_SEV, 	TXT_EIG, 	TXT_NIG, 	TXT_TEN,
	TXT_ELEVEN, TXT_TWELVE, TXT_THIRT, 	TXT_FOURT, 	TXT_FIFT, 	TXT_SIXT, 	TXT_SEVENT, TXT_EIGHT, 	TXT_NINET, 	TXT_TWENT,
	TXT_21, TXT_22, TXT_23, TXT_24, TXT_25, TXT_26, TXT_27, TXT_28, TXT_29, TXT_30
	)
	VALUES
	(#{P_ID},
	#{STOCKMGROUT_ID},
	#{ORDERBATCH_TYPE},
	#{STOCKDTLMGROUT_ID},
	#{TIME_ONE}, 	#{TIME_TWO}, 	#{TIME_THR}, 	#{TIME_FOU}, 	#{TIME_FIV}, 	#{TIME_SIX}, 	#{TIME_SEV}, 	#{TIME_EIG}, 	#{TIME_NIG}, 	#{TIME_TEN},
	#{NUM_ONE}, 	#{NUM_TWO}, 	#{NUM_THR}, 	#{NUM_FOU}, 	#{NUM_FIV}, 	#{NUM_SIX}, 	#{NUM_SEV}, 	#{NUM_EIG}, 	#{NUM_NIG}, 	#{NUM_TEN},
	#{TXT_ONE}, 	#{TXT_TWO}, 	#{TXT_THR}, 	#{TXT_FOU}, 	#{TXT_FIV}, 	#{TXT_SIX}, 	#{TXT_SEV}, 	#{TXT_EIG}, 	#{TXT_NIG}, 	#{TXT_TEN},
	#{TXT_ELEVEN}, 	#{TXT_TWELVE}, 	#{TXT_THIRT}, 	#{TXT_FOURT}, 	#{TXT_FIFT}, 	#{TXT_SIXT}, 	#{TXT_SEVENT}, 	#{TXT_EIGHT}, 	#{TXT_NINET}, 	#{TXT_TWENT},
	#{TXT_21},      #{TXT_22},      #{TXT_23},      #{TXT_24},      #{TXT_25},      #{TXT_26},      #{TXT_27},      #{TXT_28},      #{TXT_29},      #{TXT_30}
	)
	</insert>

	<update id="editOrderDtl" parameterType="pd">
	  UPDATE TM_STOCKMGROUT_PROPERTY
		SET
		TIME_ONE = #{TIME_ONE},
		TIME_TWO = #{TIME_TWO},
		TIME_THR = #{TIME_THR},
		TIME_FOU = #{TIME_FOU},
		TIME_FIV = #{TIME_FIV},
		TIME_SIX = #{TIME_SIX},
		TIME_SEV = #{TIME_SEV},
		TIME_EIG = #{TIME_EIG},
		TIME_NIG = #{TIME_NIG},
		TIME_TEN = #{TIME_TEN},
		NUM_ONE = #{NUM_ONE},
		NUM_TWO = #{NUM_TWO},
		NUM_THR = #{NUM_THR},
		NUM_FOU = #{NUM_FOU},
		NUM_FIV = #{NUM_FIV},
		NUM_SIX = #{NUM_SIX},
		NUM_SEV = #{NUM_SEV},
		NUM_EIG = #{NUM_EIG},
		NUM_NIG = #{NUM_NIG},
		NUM_TEN = #{NUM_TEN},
		TXT_ONE = #{TXT_ONE},
		TXT_TWO = #{TXT_TWO},
		TXT_THR = #{TXT_THR},
		TXT_FOU = #{TXT_FOU},
		TXT_FIV = #{TXT_FIV},
		TXT_SIX = #{TXT_SIX},
		TXT_SEV = #{TXT_SEV},
		TXT_EIG = #{TXT_EIG},
		TXT_NIG = #{TXT_NIG},
		TXT_TEN = #{TXT_TEN},
		TXT_ELEVEN = #{TXT_ELEVEN},
		TXT_TWELVE = #{TXT_TWELVE},
		TXT_THIRT = #{TXT_THIRT},
		TXT_FOURT = #{TXT_FOURT},
		TXT_FIFT = #{TXT_FIFT},
		TXT_SIXT = #{TXT_SIXT},
		TXT_SEVENT = #{TXT_SEVENT},
		TXT_EIGHT = #{TXT_EIGHT},
		TXT_NINET = #{TXT_NINET},
		TXT_TWENT = #{TXT_TWENT},
		TXT_21 = #{TXT_21},
		TXT_22 = #{TXT_22},
		TXT_23 = #{TXT_23},
		TXT_24 = #{TXT_24},
		TXT_25 = #{TXT_25},
		TXT_26 = #{TXT_26},
		TXT_27 = #{TXT_27},
		TXT_28 = #{TXT_28},
		TXT_29 = #{TXT_29},
		TXT_30 = #{TXT_30}
		WHERE
		P_ID = #{P_ID}
	</update>

	<!-- 产品-->
	<insert id="saveProdDtl" parameterType="pd">
	 INSERT INTO TM_STOCKMGROUT_DTL
	 (STOCKDTLMGROUT_ID, STOCKMGROUT_ID, ROW_NO, CUSTOMER_ID, PRODUCT_ID, PRODUCT_TYPE, PACK_RULE, PACK_UNIT, OT_EA, OT_RATIO,
	  PALLET_EA, PALLET_RATIO, BOX_EA, BOX_RATIO, INPACK_EA, INPACK_RATIO, EA_EA, EA_RATIO, LONG_UT, WIDE_UT,
	  HIGH_UT, UNIT_VOLUME, TOTAL_VOLUME, TOTAL_WEIGHT, TOTAL_SUTTLE, TOTAL_PRICE, UNIT_PRICE, CURRENCY_TYPE, STORAGE_ID, LOCATOR_ID,
	  CAR_TYPE, CAR_PLATE, SEAL_NO, TP_HAULIER, FREEZE_CODE, MGR_SERIAL, MEMO, IMP_FLG, DEPOT_STATE, ASSIGNED_STATE,PICK_STATE,
	  LOADED_STATE, RULE_ASSIGNED, RULE_STOCKTURN, RULE_PICK, SEND_EA, PREPLAN_EA, ASSIGNED_EA, PICK_EA, CARGO_EA, LOADED_EA,
	  CREATE_EMP, CREATE_TM, MODIFY_EMP, MODIFY_TM, DEL_FLG, ASSIGNED_FLG ,CARGO_STATE, CARGO_TYPE)
     VALUES
	  (#{STOCKDTLMGROUT_ID}, #{STOCKMGROUT_ID}, #{ROW_NO}, #{CUSTOMER_ID}, #{PRODUCT_ID}, #{PRODUCT_TYPE}, #{PACK_RULE}, #{PACK_UNIT}, #{OT_EA}, #{OT_RATIO},
	   #{PALLET_EA}, #{PALLET_RATIO}, #{BOX_EA}, #{BOX_RATIO}, #{INPACK_EA}, #{INPACK_RATIO}, #{EA_EA}, #{EA_RATIO}, #{LONG_UT}, #{WIDE_UT},
	   #{HIGH_UT}, #{UNIT_VOLUME}, #{TOTAL_VOLUME}, #{TOTAL_WEIGHT}, #{TOTAL_SUTTLE}, #{TOTAL_PRICE}, #{UNIT_PRICE}, #{CURRENCY_TYPE}, #{STORAGE_ID}, #{LOCATOR_ID},
	   #{CAR_TYPE}, #{CAR_PLATE}, #{SEAL_NO}, #{TP_HAULIER}, #{FREEZE_CODE}, #{MGR_SERIAL}, #{MEMO}, #{IMP_FLG}, #{DEPOT_STATE}, #{ASSIGNED_STATE},#{PICK_STATE},
	   #{LOADED_STATE}, #{RULE_ASSIGNED}, #{RULE_STOCKTURN}, #{RULE_PICK}, #{SEND_EA}, #{PREPLAN_EA}, #{ASSIGNED_EA}, #{PICK_EA},#{CARGO_EA}, #{LOADED_EA},
	   #{CREATE_EMP}, #{CREATE_TM}, #{MODIFY_EMP}, #{MODIFY_TM}, #{DEL_FLG}, #{ASSIGNED_FLG}, #{CARGO_STATE}, #{CARGO_TYPE} )
</insert>

	<!-- 修改 -->
	<update id="editDtl" parameterType="pd">
   UPDATE TM_STOCKMGROUT_DTL
	SET
		PRODUCT_TYPE = #{PRODUCT_TYPE},
		PACK_RULE = #{PACK_RULE},
		PACK_UNIT = #{PACK_UNIT},
		OT_EA = #{OT_EA},
		OT_RATIO = #{OT_RATIO},
		PALLET_EA = #{PALLET_EA},
		PALLET_RATIO = #{PALLET_RATIO},
		BOX_EA = #{BOX_EA},
		BOX_RATIO = #{BOX_RATIO},
		INPACK_EA = #{INPACK_EA},
		INPACK_RATIO = #{INPACK_RATIO},
		EA_EA = #{EA_EA},
		EA_RATIO = #{EA_RATIO},
		LONG_UT = #{LONG_UT},
		WIDE_UT = #{WIDE_UT},
		HIGH_UT = #{HIGH_UT},
		UNIT_VOLUME = #{UNIT_VOLUME},
		TOTAL_VOLUME = #{TOTAL_VOLUME},
		TOTAL_WEIGHT = #{TOTAL_WEIGHT},
		TOTAL_SUTTLE = #{TOTAL_SUTTLE},
		TOTAL_PRICE = #{TOTAL_PRICE},
		UNIT_PRICE = #{UNIT_PRICE},
		CURRENCY_TYPE = #{CURRENCY_TYPE},
		STORAGE_ID = #{STORAGE_ID},
		LOCATOR_ID = #{LOCATOR_ID},
		CAR_TYPE = #{CAR_TYPE},
		CAR_PLATE = #{CAR_PLATE},
		SEAL_NO = #{SEAL_NO},
		TP_HAULIER = #{TP_HAULIER},
		FREEZE_CODE = #{FREEZE_CODE},
		MGR_SERIAL = #{MGR_SERIAL},
		MEMO = #{MEMO},
		RULE_ASSIGNED = #{RULE_ASSIGNED},
		RULE_STOCKTURN = #{RULE_STOCKTURN},
		RULE_PICK = #{RULE_PICK},
		SEND_EA = #{SEND_EA},
		PREPLAN_EA = #{PREPLAN_EA},
		ASSIGNED_EA = #{ASSIGNED_EA},
		PICK_EA = #{PICK_EA},
		LOADED_EA = #{LOADED_EA},
		MODIFY_EMP = #{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM}
	WHERE
	STOCKDTLMGROUT_ID = #{STOCKDTLMGROUT_ID}
	</update>

	<!-- 删除 -->
	<delete id="deleteDtl" parameterType="pd">
		UPDATE TM_STOCKMGROUT_DTL SET DEL_FLG = '1'
		WHERE ASSIGNED_STATE ='100'
		  AND STOCKDTLMGROUT_ID =#{STOCKDTLMGROUT_ID}
	</delete>

	<!-- 通过ID获取数据 -->
	<select id="findDtlById" parameterType="pd" resultType="pd">
		SELECT
		A.STOCKMGROUT_ID,A.OUTSTOCK_NO,A.CUSTOMER_ID,A.OUTSTOCK_TYPE,A.PRE_OUT_DATE,A.REAL_OUT_DATE,A.OUTSTOCK_WAY,A.DEPOT_STATE,A.PICK_STATE,
        A.TOTAL_WEIGHT,A.LOADED_TYPE,A.TOTAL_SUTTLE,A.TOTAL_VOLUME,A.TOTAL_PRICE,A.TOTAL_EA,A.PRIORITY_LEVEL,A.ORDER_NO,A.COST_STATE,A.MEMO,
        A.CREATE_EMP,A.CREATE_TM,A.MODIFY_EMP,A.MODIFY_TM,A.ASSIGNED_STATE,A.CONFIRM_STATE,
		B.P_ID, B.ORDERBATCH_TYPE,
		B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
		B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
		B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
		B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
		B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
		FROM TM_STOCKMGROUT A LEFT JOIN TM_STOCKMGROUT_PROPERTY B ON A.STOCKMGROUT_ID = B.STOCKMGROUT_ID
		WHERE 1 =1 AND  A.STOCKMGROUT_ID =#{STOCKMGROUT_ID} AND  B.ORDERBATCH_TYPE = #{ORDERBATCH_TYPE}
	</select>

	<select id="findDtl" parameterType="pd" resultType="pd">
		SELECT
		A.STOCKDTLMGROUT_ID,A.STOCKMGROUT_ID,A.ROW_NO,A.CUSTOMER_ID,A.PRODUCT_ID,A.PRODUCT_TYPE,A.PACK_RULE,A.PACK_UNIT,A.OT_EA,A.OT_RATIO,
		A.PALLET_EA,A.PALLET_RATIO,A.BOX_EA,A.BOX_RATIO,A.INPACK_EA,A.INPACK_RATIO,A.EA_EA,A.EA_RATIO,A.LONG_UT,
		A.WIDE_UT,A.HIGH_UT,A.UNIT_VOLUME,A.TOTAL_VOLUME,A.TOTAL_WEIGHT,A.TOTAL_SUTTLE,A.TOTAL_PRICE,A.UNIT_PRICE,A.CURRENCY_TYPE,
		A.STORAGE_ID,A.LOCATOR_ID,A.CAR_TYPE,A.CAR_PLATE,A.SEAL_NO,A.TP_HAULIER,A.FREEZE_CODE,A.MGR_SERIAL,A.MEMO,A.IMP_FLG,
		A.DEPOT_STATE,A.ASSIGNED_STATE,A.LOADED_STATE,A.RULE_ASSIGNED,A.RULE_STOCKTURN,A.RULE_PICK,A.SEND_EA,A.PREPLAN_EA,A.ASSIGNED_EA,
		A.PICK_EA,A.LOADED_EA,
		B.P_ID, B.ORDERBATCH_TYPE,
		B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
		B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
		B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
		B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
		B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
		FROM TM_STOCKMGROUT_DTL A LEFT JOIN
		(SELECT * FROM  TM_STOCKMGROUT_PROPERTY WHERE STOCKMGROUT_ID =#{STOCKMGROUT_ID} AND ORDERBATCH_TYPE = #{ORDERBATCH_TYPE} )  B
		ON A.STOCKDTLMGROUT_ID = B.STOCKDTLMGROUT_ID
		WHERE  DEL_FLG = '0'
		  AND  A.STOCKMGROUT_ID =#{STOCKMGROUT_ID}
		<if test="STOCKDTLMGROUT_ID != null and STOCKDTLMGROUT_ID != ''">
	     AND A.STOCKDTLMGROUT_ID = #{STOCKDTLMGROUT_ID}
		</if>
	</select>

	<select id="findDtlNamelistPage" parameterType="page" resultType="pd">
		SELECT T.* FROM (
		SELECT  A.ROW_NO,A.STOCKDTLMGROUT_ID,A.STOCKMGROUT_ID,A.CUSTOMER_ID,A.PRODUCT_ID,
		A.EA_EA,A.BOX_NO,A.CREATE_TM, A.ASSIGNED_FLG,A.ASSIGNED_EA,
		A.ASSIGNED_STATE,A.PICK_STATE,A.LOADED_STATE,A.DEPOT_STATE,A.CARGO_STATE,
		'' BIG_BOX_NO,'' LOT_NO,'' DATE_CODE,'' SEPARATE_QTY,'' COO,
		'' BIN_CODE,'' REMARK1, '' REMARK2,'' REMARK3,
		${pd.DYNC_E}
		FROM TM_STOCKMGROUT_DTL A,TM_STOCKMGROUT_PROPERTY C2
		WHERE A.STOCKDTLMGROUT_ID = C2.STOCKDTLMGROUT_ID
		  AND A.DEL_FLG = '0'
		  AND A.ASSIGNED_FLG='0'
		  AND A.STOCKMGROUT_ID = #{pd.STOCKMGROUT_ID}
		UNION ALL
		SELECT  A.ROW_NO,A.STOCKDTLMGROUT_ID,A.STOCKMGROUT_ID,A.CUSTOMER_ID,A.PRODUCT_ID,
		A.EA_EA,A.BOX_NO,A.CREATE_TM, A.ASSIGNED_FLG,A.ASSIGNED_EA,
		A.ASSIGNED_STATE,A.PICK_STATE,A.LOADED_STATE,A.DEPOT_STATE,A.CARGO_STATE,
		B.BIG_BOX_NO,B.LOT_NO, B.DATE_CODE, B.SEPARATE_QTY, B.COO, B.BIN_CODE,B.REMARK1, B.REMARK2, B.REMARK3,
		${pd.DYNC_E}
		FROM TM_BOX B,TM_STOCKMGROUT_DTL A,TM_STOCKMGROUT_PROPERTY C2
		WHERE B.BOX_ID = A.STOCKDTLMGROUT_ID
		AND A.STOCKDTLMGROUT_ID = C2.STOCKDTLMGROUT_ID
		AND A.DEL_FLG = '0'
		AND A.ASSIGNED_FLG='1'
		AND A.STOCKMGROUT_ID = #{pd.STOCKMGROUT_ID}
		AND C2.STOCKMGROUT_ID = #{pd.STOCKMGROUT_ID}
		) T
		ORDER BY T.ROW_NO+0 ASC ,T.CREATE_TM ASC
	</select>

	<!--listPage 分页 需要包含字符串-->
	<select id="findDtlNamelistPage1" parameterType="page" resultType="pd">
     SELECT T.* FROM (
			SELECT  A.ROW_NO,A.STOCKDTLMGROUT_ID,A.STOCKMGROUT_ID,A.CUSTOMER_ID,A.PRODUCT_ID,
					A.EA_EA,A.BOX_NO,A.CREATE_TM, A.ASSIGNED_FLG,A.ASSIGNED_EA,
					A.ASSIGNED_STATE,A.PICK_STATE,A.LOADED_STATE,A.DEPOT_STATE,A.CARGO_STATE,
					 '' BIG_BOX_NO,'' LOT_NO,'' DATE_CODE,'' SEPARATE_QTY,'' COO,
                     '' BIN_CODE,'' REMARK1, '' REMARK2,'' REMARK3,
					${pd.DYNC_N}
				FROM TM_STOCKMGROUT_DTL A
				WHERE A.DEL_FLG = '0'
				  AND A.ASSIGNED_FLG='0'
                  AND A.STOCKMGROUT_ID = #{pd.STOCKMGROUT_ID}
                UNION ALL
                  SELECT  A.ROW_NO,A.STOCKDTLMGROUT_ID,A.STOCKMGROUT_ID,A.CUSTOMER_ID,A.PRODUCT_ID,
					A.EA_EA,A.BOX_NO,A.CREATE_TM, A.ASSIGNED_FLG,A.ASSIGNED_EA,
					A.ASSIGNED_STATE,A.PICK_STATE,A.LOADED_STATE,A.DEPOT_STATE,A.CARGO_STATE,
					B.BIG_BOX_NO,B.LOT_NO, B.DATE_CODE, B.SEPARATE_QTY, B.COO, B.BIN_CODE,B.REMARK1, B.REMARK2, B.REMARK3,
					${pd.DYNC_E}
				FROM TM_BOX B,TM_STOCKMGROUT_DTL A,TM_STOCKMGROUT_PROPERTY C2
				WHERE B.BOX_ID = A.STOCKDTLMGROUT_ID
				  AND A.STOCKDTLMGROUT_ID = C2.STOCKDTLMGROUT_ID
				  AND A.DEL_FLG = '0'
				  AND A.ASSIGNED_FLG='1'
                  AND A.STOCKMGROUT_ID = #{pd.STOCKMGROUT_ID}
                  AND C2.STOCKMGROUT_ID = #{pd.STOCKMGROUT_ID}
                  ) T
		  ORDER BY T.ROW_NO+0 ASC ,T.CREATE_TM ASC
	</select>


	<select id="findDtlByPidAndProd" parameterType="pd" resultType="pd">
		SELECT
		A.STOCKDTLMGROUT_ID, A.STOCKMGROUT_ID, A.ROW_NO, A.CUSTOMER_ID, A.PRODUCT_ID, A.PRODUCT_TYPE, A.PACK_RULE, A.PACK_UNIT, A.OT_EA, A.OT_RATIO,
		A.PALLET_EA, A.PALLET_RATIO, A.BOX_EA, A.BOX_RATIO, A.INPACK_EA, A.INPACK_RATIO, A.EA_EA, A.EA_RATIO, A.LONG_UT, A.WIDE_UT, A.HIGH_UT,
		A.UNIT_VOLUME, A.TOTAL_VOLUME, A.TOTAL_WEIGHT, A.TOTAL_SUTTLE, A.TOTAL_PRICE, A.UNIT_PRICE, A.CURRENCY_TYPE, A.STORAGE_ID,
		A.LOCATOR_ID, A.CAR_TYPE, A.CAR_PLATE, A.SEAL_NO, A.TP_HAULIER, A.FREEZE_CODE, A.MGR_SERIAL, A.MEMO, IMP_FLG, A.DEPOT_STATE,
		A.ASSIGNED_STATE, A.LOADED_STATE, A.CREATE_EMP, A.CREATE_TM, A.MODIFY_EMP, A.MODIFY_TM,A.CARGO_STATE,
		B.P_ID, B.ORDERBATCH_TYPE,
		B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
		B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
		B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
		B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
		B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
		FROM TM_STOCKMGROUT_DTL A LEFT JOIN TM_STOCKMGROUT_PROPERTY B ON A.STOCKMGROUT_ID = B.STOCKMGROUT_ID
		WHERE 1 =1
		AND A.DEL_FLG = '0'
		AND  A.STOCKMGROUT_ID =#{STOCKMGROUT_ID}
		AND A.PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<select id="findDtlName" parameterType="pd" resultType="pd">
		SELECT  A.ROW_NO,
			A.STOCKDTLMGROUT_ID,
			A.STOCKMGROUT_ID,
			A.CUSTOMER_ID,
			A.PRODUCT_ID,
			CONCAT(B.CUSTOMER_CN,CONCAT('(',B.CUSTOMER_CODE,')'))  CUSTOMER_CN,
			CONCAT(C.PRODUCT_CN,CONCAT('(',C.PRODUCT_CODE,')'))  PRODUCT_CN,
			(SELECT C_VALUE FROM TB_SELECT WHERE SELECT_ID = A.PRODUCT_TYPE) PRODUCT_TYPE_CN,
			(SELECT C_VALUE FROM TB_SELECT WHERE SELECT_ID = A.PACK_UNIT)  PACK_UNIT_CN,
			(SELECT PACK_CN FROM TB_PACKRULE WHERE PACKRULE_ID = A.PACK_RULE)  PACK_RULE_CN
	 FROM TM_STOCKMGROUT_DTL A, TB_CUSTOMER B,TB_PRODUCT C
	 WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
	   AND A.PRODUCT_ID = C.PRODUCT_ID
	   AND  A.STOCKMGRIN_ID =#{STOCKMGRIN_ID}
	   ORDER BY  A.ROW_NO
	</select>

	<select id="findByOutStockNoForCheck" parameterType="pd" resultType="pd">
	SELECT 	STOCKMGROUT_ID, OUTSTOCK_NO, CUSTOMER_ID, OUTSTOCK_TYPE, PRE_OUT_DATE, REAL_OUT_DATE, OUTSTOCK_WAY, DEPOT_STATE,
	        PICK_STATE, TOTAL_WEIGHT, LOADED_TYPE, TOTAL_SUTTLE, TOTAL_VOLUME, TOTAL_PRICE, TOTAL_EA, PRIORITY_LEVEL, ORDER_NO, COST_STATE,
	        MEMO, CREATE_EMP, CREATE_TM, MODIFY_EMP, MODIFY_TM, ASSIGNED_STATE
	FROM TM_STOCKMGROUT
	WHERE DEL_FLG ='0'
	  AND OUTSTOCK_NO = #{OUTSTOCK_NO}
	</select>

	<select id="findRowNo" parameterType="pd" resultType="pd">
		SELECT max(ROW_NO+0)+1  ROW_NO
		FROM TM_STOCKMGROUT_DTL A
		WHERE A.DEL_FLG = '0'
		AND A.ASSIGNED_FLG ='0'
		AND A.STOCKMGROUT_ID = #{STOCKMGROUT_ID}
	</select>

</mapper>