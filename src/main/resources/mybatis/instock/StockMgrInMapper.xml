<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StockMgrInMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
	  INSERT INTO TM_STOCKMGRIN
		( INSTOCK_NO, CUSTOMER_ID, INSTOCK_TYPE, PRE_INSTOCK_DATE, REAL_INSTOCK_DATE, INSTOCK_STATE, PUT_STATE,
		TOTAL_WEIGHT, TOTAL_SUTTLE, TOTAL_VOLUME, TOTAL_PRICE, TOTAL_EA, PRIORITY_LEVEL, ORDER_NO, COST_STATE,
		 MEMO, CREATE_EMP, CREATE_TM, MODIFY_EMP, MODIFY_TM, DEL_FLG, STOCKMGRIN_ID, ASSIGNED_STATE ,CONFIRM_STATE)
      VALUES
		 ( #{INSTOCK_NO}, #{CUSTOMER_ID}, #{INSTOCK_TYPE}, #{PRE_INSTOCK_DATE}, #{REAL_INSTOCK_DATE}, #{INSTOCK_STATE}, #{PUT_STATE},
		 #{TOTAL_WEIGHT}, #{TOTAL_SUTTLE}, #{TOTAL_VOLUME}, #{TOTAL_PRICE}, #{TOTAL_EA}, #{PRIORITY_LEVEL}, #{ORDER_NO}, #{COST_STATE},
		 #{MEMO}, #{CREATE_EMP}, #{CREATE_TM}, #{MODIFY_EMP}, #{MODIFY_TM}, #{DEL_FLG}, #{STOCKMGRIN_ID}, #{ASSIGNED_STATE}, #{CONFIRM_STATE} )
	</insert>

	<insert id="saveConfirm" parameterType="pd">
			UPDATE TM_STOCKMGRIN SET CONFIRM_STATE = '1',REAL_INSTOCK_DATE = #{REAL_INSTOCK_DATE} WHERE STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		DELETE FROM TM_STOCKMGRIN WHERE INSTOCK_STATE ='75' AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</delete>


	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		UPDATE  TM_STOCKMGRIN
			SET
				INSTOCK_TYPE = #{INSTOCK_TYPE},
				PRE_INSTOCK_DATE = #{PRE_INSTOCK_DATE},
				REAL_INSTOCK_DATE = #{REAL_INSTOCK_DATE},
				TOTAL_WEIGHT = #{TOTAL_WEIGHT},
				TOTAL_SUTTLE = #{TOTAL_SUTTLE},
				TOTAL_VOLUME = #{TOTAL_VOLUME},
				TOTAL_PRICE = #{TOTAL_PRICE},
				TOTAL_EA = #{TOTAL_EA},
				PRIORITY_LEVEL = #{PRIORITY_LEVEL},
				ORDER_NO = #{ORDER_NO},
				COST_STATE = #{COST_STATE},
				MEMO = #{MEMO},
			STOCKMGRIN_ID = STOCKMGRIN_ID
			WHERE
				STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		SELECT
	  A.STOCKMGRIN_ID, A.INSTOCK_NO, A.CUSTOMER_ID, A.INSTOCK_TYPE, A.PRE_INSTOCK_DATE, A.REAL_INSTOCK_DATE, A.INSTOCK_STATE, A.ASSIGNED_STATE,A.PUT_STATE, A.TOTAL_WEIGHT, A.TOTAL_SUTTLE,
	  A.TOTAL_VOLUME, A.TOTAL_PRICE, A.TOTAL_EA, A.PRIORITY_LEVEL, A.ORDER_NO, A.COST_STATE, A.MEMO, A.CREATE_EMP, A.CREATE_TM, A.MODIFY_EMP, A.MODIFY_TM,A.CONFIRM_STATE,
	  B.P_ID, B.ORDERBATCH_TYPE,
	  B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
	  B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
	  B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
	  B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
	  B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
  FROM TM_STOCKMGRIN A LEFT JOIN TM_STOCKMGRIN_PROPERTY B ON A.STOCKMGRIN_ID = B.STOCKMGRIN_ID
  WHERE 1 =1 AND  A.STOCKMGRIN_ID =#{STOCKMGRIN_ID} AND  B.ORDERBATCH_TYPE = #{ORDERBATCH_TYPE}
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT DISTINCT INSTOCK_NO, CUSTOMER_ID, INSTOCK_TYPE, PRE_INSTOCK_DATE, REAL_INSTOCK_DATE,INSTOCK_STATE,PUT_STATE,
		TOTAL_WEIGHT, TOTAL_SUTTLE, TOTAL_VOLUME, TOTAL_PRICE,TOTAL_EA, PRIORITY_LEVEL, ORDER_NO,COST_STATE,
		A.STOCKMGRIN_ID,ASSIGNED_STATE, INBOUND_REFERENCE, HAWB_HBL, SHIPPER, OF_PACKAGE
		FROM (
		SELECT DISTINCT
		A.INSTOCK_NO, A.CUSTOMER_ID, A.INSTOCK_TYPE, A.PRE_INSTOCK_DATE, A.REAL_INSTOCK_DATE, A.INSTOCK_STATE,A.PUT_STATE,
		A.TOTAL_WEIGHT, A.TOTAL_SUTTLE, A.TOTAL_VOLUME, A.TOTAL_PRICE, A.TOTAL_EA, A.PRIORITY_LEVEL, A.ORDER_NO,A.COST_STATE,
		A.STOCKMGRIN_ID,A.ASSIGNED_STATE,r.TXT_ONE INBOUND_REFERENCE,r.TXT_FIV HAWB_HBL,r.TXT_THR SHIPPER,r.TXT_SIX OF_PACKAGE
		FROM TM_STOCKMGRIN A,TM_STOCKMGRIN_PROPERTY r
		WHERE a.STOCKMGRIN_ID = r.STOCKMGRIN_ID
		  AND r.ORDERBATCH_TYPE='60'
		  AND A.DEL_FLG = '0'
		<if test="pd != null and pd.CUSTOMER_ID != null and pd.CUSTOMER_ID != ''">
			AND A.CUSTOMER_ID =#{pd.CUSTOMER_ID}
		</if>
		<if test="pd != null and pd.HAWB_HBL != null and pd.HAWB_HBL != ''">
			AND r.TXT_FIV LIKE CONCAT(CONCAT('%', #{pd.HAWB_HBL}),'%')
		</if>
		<if test="pd != null and pd.INBOUND_REFERENCE != null and pd.INBOUND_REFERENCE != ''">
			AND r.TXT_ONE LIKE CONCAT(CONCAT('%', #{pd.INBOUND_REFERENCE}),'%')
		</if>
		<if test="pd != null and pd.SHIPPER != null and pd.SHIPPER != ''">
			AND r.TXT_THR LIKE CONCAT(CONCAT('%', #{pd.SHIPPER}),'%')
		</if>
		<if test="pd != null and pd.OF_PACKAGE != null and pd.OF_PACKAGE != ''">
			AND r.TXT_SIX LIKE CONCAT(CONCAT('%', #{pd.OF_PACKAGE}),'%')
		</if>
		<if test="pd != null and pd.INSTOCK_NO != null and pd.INSTOCK_NO != ''">
			AND A.INSTOCK_NO LIKE CONCAT(CONCAT('%', #{pd.INSTOCK_NO}),'%')
		</if>
		<if test="pd != null and pd.ORDER_NO != null and pd.ORDER_NO != ''">
			AND A.ORDER_NO LIKE CONCAT(CONCAT('%', #{pd.ORDER_NO}),'%')
		</if>
		<if test="pd != null and pd.COST_STATE != null and pd.COST_STATE != ''">
			AND A.COST_STATE = #{pd.COST_STATE}
		</if>
		<!--  小于号转义 &lt;   大于号: &gt;  -->
		<if test="pd != null and pd.PRE_INSTOCK_DATE_BEGIN != null and pd.PRE_INSTOCK_DATE_BEGIN != ''">
			<![CDATA[ AND A.PRE_INSTOCK_DATE >= #{pd.PRE_INSTOCK_DATE_BEGIN} ]]>
		</if>

		<if test="pd != null and pd.PRE_INSTOCK_DATE_END != null and pd.PRE_INSTOCK_DATE_END != ''">
			<![CDATA[ AND A.PRE_INSTOCK_DATE <= #{pd.PRE_INSTOCK_DATE_END} ]]>
		</if>

		<!-- 入库类型-->
		<if test="pd.INSTOCK_TYPE_S != null">
			AND A.INSTOCK_TYPE IN
			<foreach item="item" index="index" collection="pd.INSTOCK_TYPE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<!-- 入库状态-->
		<if test="pd.INSTOCK_STATE_S != null">
			AND A.INSTOCK_STATE IN
			<foreach item="item" index="index" collection="pd.INSTOCK_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>

		<!-- 码放状态-->
		<if test="pd.PUT_STATE_S != null">
			AND A.PUT_STATE IN
			<foreach item="item" index="index" collection="pd.PUT_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<!-- 分配状态-->
		<if test="pd.ASSIGNED_STATE_S != null">
			AND A.ASSIGNED_STATE IN
			<foreach item="item" index="index" collection="pd.ASSIGNED_STATE_S" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		) A

		<if test="pd != null and ( (pd.PRODUCT_ID != null and pd.PRODUCT_ID != '') or (pd.DTL_CUSTOMER_ID != null and pd.DTL_CUSTOMER_ID != '') )  ">
		,
		(SELECT DISTINCT STOCKMGRIN_ID FROM TM_STOCKMGRIN_DTL
		WHERE DEL_FLG = '0'
		<if test="pd != null and pd.DTL_CUSTOMER_ID != null and pd.DTL_CUSTOMER_ID != ''">
			AND CUSTOMER_ID =#{pd.DTL_CUSTOMER_ID}
		</if>
		<if test="pd != null and pd.PRODUCT_ID != null and pd.PRODUCT_ID != ''">
			AND PRODUCT_ID =#{pd.PRODUCT_ID}
		</if>
		) B

		WHERE A.STOCKMGRIN_ID = b.STOCKMGRIN_ID
		</if>

		<if test='pd.SORT_CLOUM != null and pd.SORT_CLOUM=="INSTOCK_NO"'>
			ORDER BY A.INSTOCK_NO
			<if test='pd.SORT_BY != null and pd.SORT_BY=="DESC"'>
				DESC
			</if>
		</if>
		<if test='pd.SORT_CLOUM != null and pd.SORT_CLOUM=="INBOUND_REFERENCE"'>
			ORDER BY A.INBOUND_REFERENCE
			<if test='pd.SORT_BY != null and pd.SORT_BY=="DESC"'>
				DESC
			</if>
		</if>

		<if test='pd.SORT_CLOUM != null and pd.SORT_CLOUM=="INSTOCK_TYPE"'>
			ORDER BY A.INSTOCK_TYPE
			<if test='pd.SORT_BY != null and pd.SORT_BY=="DESC"'>
				DESC
			</if>
		</if>
		<if test='pd.SORT_CLOUM != null and pd.SORT_CLOUM=="PRE_INSTOCK_DATE"'>
			ORDER BY A.PRE_INSTOCK_DATE
			<if test='pd.SORT_BY != null and pd.SORT_BY=="DESC"'>
				DESC
			</if>
		</if>
		<if test='pd.SORT_CLOUM != null and pd.SORT_CLOUM=="REAL_INSTOCK_DATE"'>
			ORDER BY A.REAL_INSTOCK_DATE
			<if test='pd.SORT_BY != null and pd.SORT_BY=="DESC"'>
				DESC
			</if>
		</if>
		<if test='pd.SORT_CLOUM != null and pd.SORT_CLOUM=="SHIPPER"'>
			ORDER BY A.SHIPPER
			<if test='pd.SORT_BY != null and pd.SORT_BY=="DESC"'>
				DESC
			</if>
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		SELECT
		 A.INSTOCK_NO, A.CUSTOMER_ID, A.INSTOCK_TYPE, A.PRE_INSTOCK_DATE, A.REAL_INSTOCK_DATE, A.INSTOCK_STATE, A.PUT_STATE,
		 A.TOTAL_WEIGHT, A.TOTAL_SUTTLE, A.TOTAL_VOLUME, A.TOTAL_PRICE, A.TOTAL_EA, A.PRIORITY_LEVEL, A.ORDER_NO, A.COST_STATE,
		 A.MEMO, A.CREATE_EMP, A.CREATE_TM, A.MODIFY_EMP, A.MODIFY_TM, A.DEL_FLG, A.STOCKMGRIN_ID
		FROM TM_STOCKMGRIN A
		WHERE DEL_FLG = '0'
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		DELETE  FROM  TM_STOCKMGRIN
		WHERE INSTOCK_STATE ='75'
		 AND STOCKMGRIN_ID IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<delete id="deleteAllDtl" parameterType="String">
		DELETE  FROM  TM_STOCKMGRIN_DTL
		WHERE RECEIPT_STATE ='75'
		 AND STOCKMGRIN_ID IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 删除 -->
	<delete id="deleteDtl" parameterType="pd">
		DELETE FROM TM_STOCKMGRIN_DTL
		WHERE  RECEIPT_STATE ='75'
		 AND STOCKDTLMGRIN_ID =#{STOCKDTLMGRIN_ID}
	</delete>

	<!-- 批量删除 -->
	<delete id="deleteDtlAll" parameterType="String">
		DELETE FROM  TM_STOCKMGRIN_DTL
		WHERE RECEIPT_STATE ='75'
		AND STOCKDTLMGRIN_ID IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!--订单属性操作-->
	<insert id="saveOrderDtl" parameterType="pd">
	INSERT INTO TM_STOCKMGRIN_PROPERTY
	(P_ID,
	STOCKMGRIN_ID,
	ORDERBATCH_TYPE,
	STOCKDTLMGRIN_ID,
	TIME_ONE, 	TIME_TWO, 	TIME_THR, 	TIME_FOU, 	TIME_FIV, 	TIME_SIX, 	TIME_SEV, 	TIME_EIG, 	TIME_NIG, 	TIME_TEN,
	NUM_ONE, 	NUM_TWO, 	NUM_THR, 	NUM_FOU, 	NUM_FIV, 	NUM_SIX, 	NUM_SEV, 	NUM_EIG, 	NUM_NIG, 	NUM_TEN,
	TXT_ONE, 	TXT_TWO, 	TXT_THR, 	TXT_FOU, 	TXT_FIV, 	TXT_SIX, 	TXT_SEV, 	TXT_EIG, 	TXT_NIG, 	TXT_TEN,
	TXT_ELEVEN, TXT_TWELVE, TXT_THIRT, 	TXT_FOURT, 	TXT_FIFT, 	TXT_SIXT, 	TXT_SEVENT, TXT_EIGHT, 	TXT_NINET, 	TXT_TWENT,
	TXT_21, TXT_22, TXT_23, TXT_24, TXT_25, TXT_26, TXT_27, TXT_28, TXT_29, TXT_30
	)
	VALUES
	(#{P_ID},
	#{STOCKMGRIN_ID},
	#{ORDERBATCH_TYPE},
	#{STOCKDTLMGRIN_ID},
	#{TIME_ONE}, 	#{TIME_TWO}, 	#{TIME_THR}, 	#{TIME_FOU}, 	#{TIME_FIV}, 	#{TIME_SIX}, 	#{TIME_SEV}, 	#{TIME_EIG}, 	#{TIME_NIG}, 	#{TIME_TEN},
	#{NUM_ONE}, 	#{NUM_TWO}, 	#{NUM_THR}, 	#{NUM_FOU}, 	#{NUM_FIV}, 	#{NUM_SIX}, 	#{NUM_SEV}, 	#{NUM_EIG}, 	#{NUM_NIG}, 	#{NUM_TEN},
	#{TXT_ONE}, 	#{TXT_TWO}, 	#{TXT_THR}, 	#{TXT_FOU}, 	#{TXT_FIV}, 	#{TXT_SIX}, 	#{TXT_SEV}, 	#{TXT_EIG}, 	#{TXT_NIG}, 	#{TXT_TEN},
	#{TXT_ELEVEN}, 	#{TXT_TWELVE}, 	#{TXT_THIRT}, 	#{TXT_FOURT}, 	#{TXT_FIFT}, 	#{TXT_SIXT}, 	#{TXT_SEVENT}, 	#{TXT_EIGHT}, 	#{TXT_NINET}, 	#{TXT_TWENT},
	#{TXT_21},      #{TXT_22},      #{TXT_23},      #{TXT_24},      #{TXT_25},      #{TXT_26},      #{TXT_27},      #{TXT_28},      #{TXT_29},      #{TXT_30}
	)
	</insert>

	<update id="editOrderDtl" parameterType="pd">
  UPDATE TM_STOCKMGRIN_PROPERTY
	SET
		TIME_ONE = #{TIME_ONE},
		TIME_TWO = #{TIME_TWO},
		TIME_THR = #{TIME_THR},
		TIME_FOU = #{TIME_FOU},
		TIME_FIV = #{TIME_FIV},
		TIME_SIX = #{TIME_SIX},
		TIME_SEV = #{TIME_SEV},
		TIME_EIG = #{TIME_EIG},
		TIME_NIG = #{TIME_NIG},
		TIME_TEN = #{TIME_TEN},
		NUM_ONE = #{NUM_ONE},
		NUM_TWO = #{NUM_TWO},
		NUM_THR = #{NUM_THR},
		NUM_FOU = #{NUM_FOU},
		NUM_FIV = #{NUM_FIV},
		NUM_SIX = #{NUM_SIX},
		NUM_SEV = #{NUM_SEV},
		NUM_EIG = #{NUM_EIG},
		NUM_NIG = #{NUM_NIG},
		NUM_TEN = #{NUM_TEN},
		TXT_ONE = #{TXT_ONE},
		TXT_TWO = #{TXT_TWO},
		TXT_THR = #{TXT_THR},
		TXT_FOU = #{TXT_FOU},
		TXT_FIV = #{TXT_FIV},
		TXT_SIX = #{TXT_SIX},
		TXT_SEV = #{TXT_SEV},
		TXT_EIG = #{TXT_EIG},
		TXT_NIG = #{TXT_NIG},
		TXT_TEN = #{TXT_TEN},
		TXT_ELEVEN = #{TXT_ELEVEN},
		TXT_TWELVE = #{TXT_TWELVE},
		TXT_THIRT = #{TXT_THIRT},
		TXT_FOURT = #{TXT_FOURT},
		TXT_FIFT = #{TXT_FIFT},
		TXT_SIXT = #{TXT_SIXT},
		TXT_SEVENT = #{TXT_SEVENT},
		TXT_EIGHT = #{TXT_EIGHT},
		TXT_NINET = #{TXT_NINET},
		TXT_TWENT = #{TXT_TWENT},
		TXT_21 = #{TXT_21},
		TXT_22 = #{TXT_22},
		TXT_23 = #{TXT_23},
		TXT_24 = #{TXT_24},
		TXT_25 = #{TXT_25},
		TXT_26 = #{TXT_26},
		TXT_27 = #{TXT_27},
		TXT_28 = #{TXT_28},
		TXT_29 = #{TXT_29},
		TXT_30 = #{TXT_30}
	WHERE
	P_ID = #{P_ID}

	</update>

	<select id="findHadDtl" parameterType="pd" resultType="pd">
		SELECT STOCKMGRIN_ID  FROM  TM_STOCKMGRIN_DTL
		WHERE STOCKMGRIN_ID=#{STOCKMGRIN_ID}
		  AND PRODUCT_ID=#{PRODUCT_ID}
		  AND BOX_NO=#{BOX_NO}
	</select>
	<!-- 产品-->
	<insert id="saveProdDtl" parameterType="pd">
	insert into TM_STOCKMGRIN_DTL
	( STOCKMGRIN_ID, ROW_NO, CUSTOMER_ID, PRODUCT_ID, PRODUCT_TYPE, PACK_RULE, PACK_UNIT, OT_EA, OT_RATIO, PALLET_EA,
	PALLET_RATIO, BOX_EA, BOX_RATIO, INPACK_EA, INPACK_RATIO, EA_EA, EA_RATIO, LONG_UT, WIDE_UT, HIGH_UT, UNIT_VOLUME,
	TOTAL_VOLUME, TOTAL_WEIGHT, TOTAL_SUTTLE, TOTAL_PRICE, UNIT_PRICE, CURRENCY_TYPE, STORAGE_ID, LOCATOR_ID, CAR_TYPE,
	CAR_PLATE, SEAL_NO, TP_HAULIER, FREEZE_CODE, MGR_SERIAL, MEMO, IMP_FLG, RECEIPT_STATE, DISTR_STATE, PUT_STATUS,
	CREATE_EMP, CREATE_TM, MODIFY_EMP, MODIFY_TM, DEL_FLG, STOCKDTLMGRIN_ID,BOX_NO,EA_ACTUAL,PUT_EA,ASSIGNED_EA,RECEI_FLG,
	PUT_STORAGE_ID,PUT_LOCATOR_ID )
	values (
	#{STOCKMGRIN_ID}, #{ROW_NO}, #{CUSTOMER_ID}, #{PRODUCT_ID}, #{PRODUCT_TYPE}, #{PACK_RULE}, #{PACK_UNIT}, #{OT_EA}, #{OT_RATIO}, #{PALLET_EA},
	#{PALLET_RATIO}, #{BOX_EA}, #{BOX_RATIO}, #{INPACK_EA}, #{INPACK_RATIO}, #{EA_EA}, #{EA_RATIO}, #{LONG_UT}, #{WIDE_UT}, #{HIGH_UT}, #{UNIT_VOLUME},
	#{TOTAL_VOLUME}, #{TOTAL_WEIGHT}, #{TOTAL_SUTTLE}, #{TOTAL_PRICE}, #{UNIT_PRICE}, #{CURRENCY_TYPE}, #{STORAGE_ID}, #{LOCATOR_ID}, #{CAR_TYPE},
	#{CAR_PLATE}, #{SEAL_NO}, #{TP_HAULIER}, #{FREEZE_CODE}, #{MGR_SERIAL}, #{MEMO}, #{IMP_FLG}, #{RECEIPT_STATE}, #{DISTR_STATE}, #{PUT_STATUS},
	#{CREATE_EMP}, #{CREATE_TM}, #{MODIFY_EMP}, #{MODIFY_TM}, #{DEL_FLG}, #{STOCKDTLMGRIN_ID},#{BOX_NO},#{EA_ACTUAL},#{PUT_EA},#{ASSIGNED_EA}, #{RECEI_FLG},
	#{PUT_STORAGE_ID}, #{PUT_LOCATOR_ID})
</insert>

	<!-- 修改 -->
	<update id="editDtl" parameterType="pd">
	UPDATE TM_STOCKMGRIN_DTL
		SET
			PRODUCT_ID = #{PRODUCT_ID},
			PRODUCT_TYPE = #{PRODUCT_TYPE},
			PACK_RULE = #{PACK_RULE},
			PACK_UNIT = #{PACK_UNIT},
			OT_EA = #{OT_EA},
			OT_RATIO = #{OT_RATIO},
			PALLET_EA = #{PALLET_EA},
			PALLET_RATIO = #{PALLET_RATIO},
			BOX_EA = #{BOX_EA},
			BOX_RATIO = #{BOX_RATIO},
			INPACK_EA = #{INPACK_EA},
			INPACK_RATIO = #{INPACK_RATIO},
			EA_EA = #{EA_EA},
			EA_RATIO = #{EA_RATIO},
			LONG_UT = #{LONG_UT},
			WIDE_UT = #{WIDE_UT},
			HIGH_UT = #{HIGH_UT},
			UNIT_VOLUME = #{UNIT_VOLUME},
			TOTAL_VOLUME = #{TOTAL_VOLUME},
			TOTAL_WEIGHT = #{TOTAL_WEIGHT},
			TOTAL_SUTTLE = #{TOTAL_SUTTLE},
			TOTAL_PRICE = #{TOTAL_PRICE},
			UNIT_PRICE = #{UNIT_PRICE},
			CURRENCY_TYPE = #{CURRENCY_TYPE},
			STORAGE_ID = #{STORAGE_ID},
			LOCATOR_ID = #{LOCATOR_ID},
			CAR_TYPE = #{CAR_TYPE},
			CAR_PLATE = #{CAR_PLATE},
			SEAL_NO = #{SEAL_NO},
			TP_HAULIER = #{TP_HAULIER},
			FREEZE_CODE = #{FREEZE_CODE},
			MGR_SERIAL = #{MGR_SERIAL},
			MEMO = #{MEMO},
			IMP_FLG = #{IMP_FLG},
			RECEIPT_STATE = #{RECEIPT_STATE},
			DISTR_STATE = #{DISTR_STATE},
			PUT_STATUS = #{PUT_STATUS},
			MODIFY_EMP = #{MODIFY_EMP},
			MODIFY_TM = #{MODIFY_TM}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}

	</update>
	<!-- 通过ID获取数据 -->
	<select id="findDtlById" parameterType="pd" resultType="pd">
		SELECT
		A.STOCKMGRIN_ID, A.INSTOCK_NO, A.CUSTOMER_ID, A.INSTOCK_TYPE, A.PRE_INSTOCK_DATE, A.REAL_INSTOCK_DATE, A.INSTOCK_STATE, A.PUT_STATE, A.TOTAL_WEIGHT, A.TOTAL_SUTTLE,
		A.TOTAL_VOLUME, A.TOTAL_PRICE, A.TOTAL_EA, A.PRIORITY_LEVEL, A.ORDER_NO, A.COST_STATE, A.MEMO, A.CREATE_EMP, A.CREATE_TM, A.MODIFY_EMP, A.MODIFY_TM,
		B.P_ID, B.ORDERBATCH_TYPE,
		B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
		B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
		B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
		B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
		B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
		FROM TM_STOCKMGRIN A LEFT JOIN
		(SELECT * FROM TM_STOCKMGRIN_PROPERTY WHERE STOCKMGRIN_ID = #{STOCKMGRIN_ID} AND ORDERBATCH_TYPE = #{ORDERBATCH_TYPE}) B
		ON A.STOCKMGRIN_ID = B.STOCKMGRIN_ID
		WHERE  1 = 1
		  AND  A.DEL_FLG = '0'
		  AND  A.STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</select>

	<select id="findDtl" parameterType="pd" resultType="pd">
		SELECT
		A.STOCKDTLMGRIN_ID, A.STOCKMGRIN_ID, A.ROW_NO, A.CUSTOMER_ID, A.PRODUCT_ID, A.PRODUCT_TYPE, A.PACK_RULE, A.PACK_UNIT, A.OT_EA, A.OT_RATIO,
		A.PALLET_EA, A.PALLET_RATIO, A.BOX_EA, A.BOX_RATIO, A.INPACK_EA, A.INPACK_RATIO, A.EA_EA, A.EA_RATIO, A.LONG_UT, A.WIDE_UT, A.HIGH_UT,
		A.UNIT_VOLUME, A.TOTAL_VOLUME, A.TOTAL_WEIGHT, A.TOTAL_SUTTLE, A.TOTAL_PRICE, A.UNIT_PRICE, A.CURRENCY_TYPE, A.STORAGE_ID,
		A.LOCATOR_ID, A.CAR_TYPE, A.CAR_PLATE, A.SEAL_NO, A.TP_HAULIER, A.FREEZE_CODE, A.MGR_SERIAL, A.MEMO, IMP_FLG, A.RECEIPT_STATE,
		A.DISTR_STATE, A.PUT_STATUS, A.CREATE_EMP, A.CREATE_TM, A.MODIFY_EMP, A.MODIFY_TM,
		B.P_ID, B.ORDERBATCH_TYPE,
		B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
		B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
		B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
		B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
		B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
		FROM TM_STOCKMGRIN_DTL A LEFT JOIN
		(SELECT * FROM TM_STOCKMGRIN_PROPERTY WHERE STOCKMGRIN_ID = #{STOCKMGRIN_ID} ) B
		ON A.STOCKDTLMGRIN_ID = B.STOCKDTLMGRIN_ID
		WHERE 1 =1
		  AND A.DEL_FLG = '0'
		  AND  A.STOCKMGRIN_ID =#{STOCKMGRIN_ID}
		<if test="STOCKDTLMGRIN_ID != null and STOCKDTLMGRIN_ID != ''">
	     AND A.STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
		</if>
	</select>

	<select id="findDtlByPidAndProd" parameterType="pd" resultType="pd">
		SELECT
		A.STOCKDTLMGRIN_ID, A.STOCKMGRIN_ID, A.ROW_NO, A.CUSTOMER_ID, A.PRODUCT_ID, A.PRODUCT_TYPE, A.PACK_RULE, A.PACK_UNIT, A.OT_EA, A.OT_RATIO,
		A.PALLET_EA, A.PALLET_RATIO, A.BOX_EA, A.BOX_RATIO, A.INPACK_EA, A.INPACK_RATIO, A.EA_EA, A.EA_RATIO, A.LONG_UT, A.WIDE_UT, A.HIGH_UT,
		A.UNIT_VOLUME, A.TOTAL_VOLUME, A.TOTAL_WEIGHT, A.TOTAL_SUTTLE, A.TOTAL_PRICE, A.UNIT_PRICE, A.CURRENCY_TYPE, A.STORAGE_ID,
		A.LOCATOR_ID, A.CAR_TYPE, A.CAR_PLATE, A.SEAL_NO, A.TP_HAULIER, A.FREEZE_CODE, A.MGR_SERIAL, A.MEMO, IMP_FLG, A.RECEIPT_STATE,
		A.DISTR_STATE, A.PUT_STATUS, A.CREATE_EMP, A.CREATE_TM, A.MODIFY_EMP, A.MODIFY_TM,
		B.P_ID, B.ORDERBATCH_TYPE,
		B.TIME_ONE, B.TIME_TWO, B.TIME_THR, B.TIME_FOU, B.TIME_FIV, B.TIME_SIX, B.TIME_SEV, B.TIME_EIG, B.TIME_NIG, B.TIME_TEN,
		B.NUM_ONE, B.NUM_TWO, B.NUM_THR, B.NUM_FOU, B.NUM_FIV, B.NUM_SIX, B.NUM_SEV, B.NUM_EIG, B.NUM_NIG, B.NUM_TEN,
		B.TXT_ONE, B.TXT_TWO, B.TXT_THR, B.TXT_FOU, B.TXT_FIV, B.TXT_SIX, B.TXT_SEV, B.TXT_EIG, B.TXT_NIG, B.TXT_TEN,
		B.TXT_ELEVEN, B.TXT_TWELVE, B.TXT_THIRT, B.TXT_FOURT, B.TXT_FIFT, B.TXT_SIXT, B.TXT_SEVENT, B.TXT_EIGHT, B.TXT_NINET, B.TXT_TWENT,
		B.TXT_21, B.TXT_22, B.TXT_23, B.TXT_24, B.TXT_25, B.TXT_26, B.TXT_27, B.TXT_28, B.TXT_29, B.TXT_30
		FROM TM_STOCKMGRIN_DTL A LEFT JOIN
		(SELECT * FROM TM_STOCKMGRIN_PROPERTY WHERE STOCKMGRIN_ID = #{STOCKMGRIN_ID} ) B
		 ON A.STOCKDTLMGRIN_ID = B.STOCKDTLMGRIN_ID
		WHERE 1 =1
		  AND A.DEL_FLG = '0'
		 AND  A.STOCKMGRIN_ID =#{STOCKMGRIN_ID}
		 AND A.PRODUCT_ID = #{PRODUCT_ID}
	</select>

   <!--listPage 分页 需要包含字符串-->
	<select id="findDtlNamelistPage" parameterType="page" resultType="pd">
		SELECT * FROM (
		SELECT '' BIG_BOX_NO,A.CREATE_TM,A.ROW_NO,A.STOCKDTLMGRIN_ID,A.STOCKMGRIN_ID,A.CUSTOMER_ID,A.PRODUCT_ID,A.SCAN_CODE,
		A.EA_EA,A.BOX_NO,A.EA_ACTUAL,A.ASSIGNED_EA,A.PUT_EA,A.PUT_STORAGE_ID,A.RECEI_FLG,A.PUT_LOCATOR_ID,
		${pd.DYNC_E}
		FROM TM_STOCKMGRIN_DTL A,TM_STOCKMGRIN_PROPERTY C2
		WHERE A.STOCKDTLMGRIN_ID = C2.STOCKDTLMGRIN_ID
		  AND A.DEL_FLG = '0'
		  AND A.RECEI_FLG = '0'
		  AND A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
		  AND C2.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}

		  UNION  ALL

		SELECT B.BIG_BOX_NO,A.CREATE_TM, A.ROW_NO,A.STOCKDTLMGRIN_ID,A.STOCKMGRIN_ID,A.CUSTOMER_ID,A.PRODUCT_ID,A.SCAN_CODE,
		A.EA_EA,A.BOX_NO,A.EA_ACTUAL,A.ASSIGNED_EA,A.PUT_EA,A.PUT_STORAGE_ID,A.RECEI_FLG,A.PUT_LOCATOR_ID,
		${pd.DYNC_E}
		FROM TM_BOX B,TM_STOCKMGRIN_DTL A,TM_STOCKMGRIN_PROPERTY C2
		WHERE B.BOX_ID = A.STOCKDTLMGRIN_ID
		  AND A.STOCKDTLMGRIN_ID = C2.STOCKDTLMGRIN_ID
		  AND A.DEL_FLG = '0'
		   AND A.RECEI_FLG = '1'
		  AND A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
		  AND C2.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
		  ) T
		ORDER BY T.ROW_NO+0,T.CREATE_TM ASC
	</select>

	<select id="findDtlNamelistPage_bak2" parameterType="page" resultType="pd">
		SELECT  D.INSTOCK_NO,A.ROW_NO,A.STOCKDTLMGRIN_ID,A.STOCKMGRIN_ID,A.CUSTOMER_ID,A.PRODUCT_ID,A.SCAN_CODE,
		A.EA_EA,A.BOX_NO,A.EA_ACTUAL,A.ASSIGNED_EA,A.PUT_EA,A.PUT_STORAGE_ID,A.RECEI_FLG,A.PUT_LOCATOR_ID
		FROM TM_STOCKMGRIN_DTL A,TM_STOCKMGRIN D
		WHERE D.STOCKMGRIN_ID = A.STOCKMGRIN_ID
		AND A.DEL_FLG = '0'
		AND A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
		ORDER BY A.ROW_NO+0,A.CREATE_TM ASC
	</select>

	<select id="findDtlNamelistPage_bak" parameterType="page" resultType="pd">
	SELECT INSTOCK_NO,ROW_NO,STOCKDTLMGRIN_ID,STOCKMGRIN_ID,CUSTOMER_ID,PRODUCT_ID,SCAN_CODE,
		   EA_EA,BOX_NO,EA_ACTUAL,ASSIGNED_EA,PUT_EA,PUT_STORAGE_ID,CUSTOMER_CN,PRODUCT_CN, STORAGE_NAME
	FROM (
		SELECT  D.INSTOCK_NO,A.ROW_NO,A.STOCKDTLMGRIN_ID,A.STOCKMGRIN_ID,A.CUSTOMER_ID,A.PRODUCT_ID,A.SCAN_CODE,
				A.EA_EA,A.BOX_NO,A.EA_ACTUAL,A.ASSIGNED_EA,A.PUT_EA,A.PUT_STORAGE_ID,
				CONCAT(B.CUSTOMER_CN,CONCAT('(',B.CUSTOMER_CODE,')'))  CUSTOMER_CN,
				CONCAT(C.PRODUCT_CN,CONCAT('(',C.PRODUCT_CODE,')'))  PRODUCT_CN
			FROM TM_STOCKMGRIN D,TM_STOCKMGRIN_DTL A, TB_CUSTOMER B,TB_PRODUCT C
			WHERE D.STOCKMGRIN_ID = A.STOCKMGRIN_ID
			  AND A.DEL_FLG = '0'
			  AND A.CUSTOMER_ID = B.CUSTOMER_ID
			  AND A.PRODUCT_ID = C.PRODUCT_ID
			  AND  A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
	  ) T1 LEFT JOIN TB_STORAGE T2
	  ON T1.PUT_STORAGE_ID = T2.STORAGE_ID
	</select>


	<!--码放界面查看明细-->
	<select id="findDtlPutStatelistPage" parameterType="page" resultType="pd">
		SELECT A.INSTOCK_NO,B.ROW_NO,B.CUSTOMER_ID,B.PRODUCT_ID,B.RECEIPT_STATE,B.EA_ACTUAL,B.BOX_NO,
		       B.DISTR_STATE,B.LOCATOR_ID,B.ASSIGNED_EA,B.PUT_STATUS,B.PUT_LOCATOR_ID,B.PUT_EA,
		       B.STOCKDTLMGRIN_ID
		FROM TM_STOCKMGRIN A,TM_STOCKMGRIN_DTL B
		WHERE  A.STOCKMGRIN_ID = b.STOCKMGRIN_ID
		  AND B.DEL_FLG = '0'
		  AND B.RECEI_FLG ='1'
          AND A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
	</select>


	<!--listPage 分页 需要包含字符串-->
	<select id="findDtlAssignlistPage" parameterType="page" resultType="pd">
	   SELECT A.INSTOCK_NO,B.ROW_NO,B.CUSTOMER_ID,B.PRODUCT_ID,B.RECEIPT_STATE,B.EA_ACTUAL,B.BOX_NO,
		       B.DISTR_STATE,B.LOCATOR_ID,B.ASSIGNED_EA,B.PUT_STATUS,B.PUT_LOCATOR_ID,B.PUT_EA
		FROM TM_STOCKMGRIN A,TM_STOCKMGRIN_DTL B
		WHERE  A.STOCKMGRIN_ID = b.STOCKMGRIN_ID
		  AND B.DEL_FLG = '0'
		  AND B.RECEI_FLG ='1'
          AND A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
	</select>

	<!--listPage 分页 需要包含字符串-->
	<select id="findDtlAssignlistPage-bak" parameterType="page" resultType="pd">
		SELECT T1.INSTOCK_NO,T1.ROW_NO,T1.CUSTOMER_CN,T1.PRODUCT_CN,T1.STOCKDTLMGRIN_ID,T1.LOCATOR_ID,
		      T2.BOX_ID,T2.BOX_NO,T2.RECEIPT_STATE,T2.ASSIGNED_STATE,T2.EA_NUM,T2.LOCATOR_CODE
		 FROM (
		SELECT
		A.INSTOCK_NO,B.ROW_NO,C.CUSTOMER_CN,D.PRODUCT_CN,B.STOCKDTLMGRIN_ID,B.LOCATOR_ID
		FROM TM_STOCKMGRIN A,TM_STOCKMGRIN_DTL B,TB_CUSTOMER C,TB_PRODUCT D
		WHERE B.DEL_FLG = '0'
		  AND A.STOCKMGRIN_ID = B.STOCKMGRIN_ID
		  AND B.CUSTOMER_ID = C.CUSTOMER_ID
		  AND B.PRODUCT_ID = D.PRODUCT_ID
	      AND  A.STOCKMGRIN_ID =#{pd.STOCKMGRIN_ID}
	) T1 LEFT JOIN (SELECT A.BOX_ID,A.BOX_NO,A.RECEIPT_STATE,A.ASSIGNED_STATE,A.EA_NUM,B.LOCATOR_CODE FROM TM_BOX A LEFT JOIN TB_LOCATOR B ON A.ASIGN_LOCATOR = B.LOCATOR_ID ) T2
	ON T1.STOCKDTLMGRIN_ID = T2.BOX_ID
	</select>



	<select id="findCancelDtlNamelistPage" parameterType="page" resultType="pd">
		SELECT INSTOCK_NO,REAL_INSTOCK_DATE,ROW_NO,STOCKDTLMGRIN_ID, STOCKMGRIN_ID, CUSTOMER_ID, PRODUCT_ID, SCAN_CODE, EA_EA,
		BOX_NO, EA_ACTUAL, ASSIGNED_EA, PUT_EA, CUSTOMER_CN, PRODUCT_CODE, PRODUCT_CN, PRODUCT_EN, PACK_CN,
		C_VALUE FREEZE_CODE
		FROM(
		SELECT  D.INSTOCK_NO,
		D.REAL_INSTOCK_DATE,
		A.ROW_NO,A.STOCKDTLMGRIN_ID,A.STOCKMGRIN_ID,A.CUSTOMER_ID,A.PRODUCT_ID,
		A.SCAN_CODE,A.EA_EA,A.BOX_NO,A.EA_ACTUAL,A.ASSIGNED_EA,A.PUT_EA,A.FREEZE_CODE,
		CONCAT(B.CUSTOMER_CN,CONCAT('(',B.CUSTOMER_CODE,')'))  CUSTOMER_CN,
		C.PRODUCT_CODE,C.PRODUCT_CN,C.PRODUCT_EN,
		E.PACK_CN
		FROM TM_STOCKMGRIN D,TM_STOCKMGRIN_DTL A, TB_CUSTOMER B,TB_PRODUCT C,TB_PACKRULE E
		WHERE D.STOCKMGRIN_ID = A.STOCKMGRIN_ID
		AND A.CUSTOMER_ID = B.CUSTOMER_ID
		AND A.PRODUCT_ID = C.PRODUCT_ID
		AND A.PACK_RULE = E.PACKRULE_ID
		AND A.DEL_FLG = '0'
		AND A.RECEI_FLG = '1'
		AND A.STOCKMGRIN_ID IN
		<foreach item="item" index="index" collection="pd.IDS" open="(" separator="," close=")">
			'${item}'
		</foreach>
		) T1 LEFT JOIN (SELECT SELECT_ID ,C_VALUE FROM TB_SELECT WHERE GROUP_KEY='FREEZE_REJECT_CODE') T2
		ON T1.FREEZE_CODE = T2.SELECT_ID
		ORDER BY INSTOCK_NO
	</select>

	<select id="findDtlName-old" parameterType="pd" resultType="pd">
	SELECT  A.ROW_NO,
		A.STOCKDTLMGRIN_ID,
		A.STOCKMGRIN_ID,
		A.CUSTOMER_ID,
		A.PRODUCT_ID,
		CONCAT(B.CUSTOMER_CN,CONCAT('(',B.CUSTOMER_CODE,')'))  CUSTOMER_CN,
		CONCAT(C.PRODUCT_CN,CONCAT('(',C.PRODUCT_CODE,')'))  PRODUCT_CN,
		(SELECT C_VALUE FROM TB_SELECT WHERE SELECT_ID = A.PRODUCT_TYPE) PRODUCT_TYPE_CN,
		(SELECT C_VALUE FROM TB_SELECT WHERE SELECT_ID = A.PACK_UNIT)  PACK_UNIT_CN,
		(SELECT PACK_CN FROM TB_PACKRULE WHERE PACKRULE_ID = A.PACK_RULE)  PACK_RULE_CN
	FROM TM_STOCKMGRIN_DTL A, TB_CUSTOMER B,TB_PRODUCT C
	WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
	 AND A.PRODUCT_ID = C.PRODUCT_ID
     AND  A.STOCKMGRIN_ID =#{STOCKMGRIN_ID}
	</select>

	<select id="findByInStockNoForCheck" parameterType="pd" resultType="pd">
		 SELECT STOCKMGRIN_ID, INSTOCK_NO, CUSTOMER_ID, INSTOCK_TYPE, PRE_INSTOCK_DATE, REAL_INSTOCK_DATE, INSTOCK_STATE, PUT_STATE,
		        TOTAL_WEIGHT, TOTAL_SUTTLE, TOTAL_VOLUME, TOTAL_PRICE, TOTAL_EA, PRIORITY_LEVEL, ORDER_NO, COST_STATE, MEMO,
		        CREATE_EMP, CREATE_TM, MODIFY_EMP, MODIFY_TM, ASSIGNED_STATE
		 FROM TM_STOCKMGRIN
		 WHERE DEL_FLG = '0'
		   AND INSTOCK_NO = #{INSTOCK_NO}
	</select>

	<select id="findStockIdByInStockNo" parameterType="pd" resultType="pd">
		SELECT STOCKMGRIN_ID FROM TM_STOCKMGRIN WHERE INSTOCK_NO = #{INSTOCK_NO}
	</select>

	<select id="findForReceiveCheck" parameterType="pd" resultType="pd">
		SELECT A.STOCKMGRIN_ID, A.INSTOCK_NO,B.STOCKDTLMGRIN_ID, B.PRODUCT_ID, B.CUSTOMER_ID,(B.EA_EA-B.EA_ACTUAL) RECEI_EA
		FROM TM_STOCKMGRIN A,TM_STOCKMGRIN_DTL B
		WHERE A.STOCKMGRIN_ID = B.STOCKMGRIN_ID
          AND A.DEL_FLG = '0'
          AND B.DEL_FLG = '0'
          AND B.RECEI_FLG ='0'
		  AND A.STOCKMGRIN_ID = #{STOCKMGRIN_ID}
		  AND B.STOCKMGRIN_ID = #{STOCKMGRIN_ID}
		  AND B.PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<select id="findInStockProperty" parameterType="pd" resultType="pd">
		SELECT TXT_TWO,TXT_FOU,TXT_FIV,TXT_SIX,NUM_ONE,
			TXT_FIFT COO,
			TXT_SIXT LOT_CODE,
			TXT_EIGHT DATE_CODE,
			TXT_NINET BIN_CODE
		FROM TM_STOCKMGRIN_PROPERTY WHERE STOCKMGRIN_ID = #{STOCKMGRIN_ID} AND STOCKDTLMGRIN_ID =#{STOCKDTLMGRIN_ID}
	</select>


	<select id="findByProdCheck" parameterType="pd" resultType="pd">
		SELECT A.STOCKMGRIN_ID, A.INSTOCK_NO,B.PRODUCT_ID, B.CUSTOMER_ID, (B.EA_EA-B.EA_ACTUAL) RECEI_EA
		FROM TM_STOCKMGRIN A,TM_STOCKMGRIN_DTL B
		WHERE A.STOCKMGRIN_ID = B.STOCKMGRIN_ID
		AND A.DEL_FLG = '0'
		AND B.DEL_FLG = '0'
		AND B.RECEI_FLG ='0'
		AND A.INSTOCK_NO = #{INSTOCK_NO}
		AND B.PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<select id="findDtlListByStockIdAndProdId" parameterType="pd" resultType="pd">
		SELECT 	A.STOCKDTLMGRIN_ID,A.STOCKMGRIN_ID,A.ROW_NO,A.CUSTOMER_ID,A.PRODUCT_ID,A.PRODUCT_TYPE,A.PACK_RULE,A.PACK_UNIT,A.OT_EA,A.OT_RATIO,A.PALLET_EA,
		A.PALLET_RATIO,A.BOX_EA,A.BOX_RATIO,A.INPACK_EA,A.INPACK_RATIO,A.EA_EA,A.EA_RATIO,A.LONG_UT,A.WIDE_UT,A.HIGH_UT,A.UNIT_VOLUME,A.TOTAL_VOLUME,A.TOTAL_WEIGHT,
		A.TOTAL_SUTTLE,A.TOTAL_PRICE,A.UNIT_PRICE,A.CURRENCY_TYPE,A.STORAGE_ID,A.LOCATOR_ID,A.CAR_TYPE,A.CAR_PLATE,A.SEAL_NO,A.TP_HAULIER,A.FREEZE_CODE,A.MGR_SERIAL,
		A.MEMO,A.IMP_FLG,A.RECEIPT_STATE,A.DISTR_STATE,A.PUT_STATUS,A.CREATE_EMP,A.CREATE_TM,A.MODIFY_EMP,A.MODIFY_TM,A.BOX_NO,A.EA_ACTUAL,A.RECEI_FLG
		FROM TM_STOCKMGRIN_DTL A
		WHERE A.DEL_FLG = '0'
		  AND A.STOCKMGRIN_ID =#{STOCKMGRIN_ID}
		  AND A.PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<!-- 根据收货 更新原始产品纪录 -->
	<update id="editDtlByReceive" parameterType="pd">
		 UPDATE TM_STOCKMGRIN_DTL
		SET
		RECEIPT_STATE = #{RECEIPT_STATE},
		EA_ACTUAL = #{EA_ACTUAL},
		MODIFY_EMP = #{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM},
		RECEI_FLG = #{RECEI_FLG}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

    <!--更新单头的分配状态 -->
	<update id="editHeadAssinedState" parameterType="pd">
		UPDATE TM_STOCKMGRIN
		SET
		ASSIGNED_STATE = #{ASSIGNED_STATE}
		WHERE
		STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</update>

	<!--更新分配库位、库区、分配状态-->
	<update id="editAssinedState" parameterType="pd">
		UPDATE TM_STOCKMGRIN_DTL
		SET
		DISTR_STATE = #{DISTR_STATE},
		STORAGE_ID = #{STORAGE_ID},
		LOCATOR_ID = #{LOCATOR_ID},
		ASSIGNED_EA = #{ASSIGNED_EA},
		MODIFY_EMP =#{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

	<update id="editSrcDtlState" parameterType="pd">
		UPDATE TM_STOCKMGRIN_DTL
		SET
		DISTR_STATE = #{DISTR_STATE},
		ASSIGNED_EA = #{ASSIGNED_EA}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

	<update id="editSrcDtlPutState" parameterType="pd">
		UPDATE TM_STOCKMGRIN_DTL
		SET
		PUT_STATUS = #{PUT_STATUS},
		PUT_EA = #{PUT_EA}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>


	<!--更新单头的码放状态 -->
	<update id="editHeadPutState" parameterType="pd">
		UPDATE TM_STOCKMGRIN
		SET
		PUT_STATE = #{PUT_STATE}
		WHERE
		STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</update>

	<!--更新码放库位、库区、码放状态-->
	<update id="editPutState" parameterType="pd">
		UPDATE TM_STOCKMGRIN_DTL
		SET
		PUT_STATUS = #{PUT_STATUS},
		PUT_EA = #{PUT_EA},
		PUT_STORAGE_ID = #{PUT_STORAGE_ID},
		PUT_LOCATOR_ID = #{PUT_LOCATOR_ID},
		MODIFY_EMP =#{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

	<update id="editPutStateScanPut" parameterType="pd">
		UPDATE TM_STOCKMGRIN_DTL
		SET
		PUT_STATUS = #{PUT_STATUS},
		PUT_EA = EA_ACTUAL,
		PUT_STORAGE_ID = #{PUT_STORAGE_ID},
		PUT_LOCATOR_ID = #{PUT_LOCATOR_ID},
		MODIFY_EMP =#{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

	<update id="editPutStateForScan" parameterType="pd">
		UPDATE TM_STOCKMGRIN_DTL
		SET
		PUT_STATUS = #{PUT_STATUS},
		PUT_EA = EA_ACTUAL,
		PUT_STORAGE_ID = #{PUT_STORAGE_ID},
		PUT_LOCATOR_ID = #{PUT_LOCATOR_ID},
		MODIFY_EMP =#{MODIFY_EMP},
		MODIFY_TM = #{MODIFY_TM}
		WHERE
		STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

	<!--单头分配状态-->
    <!--找到该入库单的所有的期望EA数-->
	<select id="findAllReceive" parameterType="pd" resultType="pd">
		SELECT  SUM(EA_EA+0) CNT FROM TM_STOCKMGRIN_DTL A WHERE RECEI_FLG ='0' AND DEL_FLG = '0' AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</select>
     <!--找到该入库单已经分配的EA数-->
	<select id="findAssinedState" parameterType="pd" resultType="pd">
		SELECT  SUM(EA_EA+0) CNT FROM TM_STOCKMGRIN_DTL A WHERE DISTR_STATE ='102' AND  RECEI_FLG ='1' AND DEL_FLG = '0' AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</select>

	<!--单头码放状态-->
	<!--找到该入库单已经分配的纪录数-->
	<select id="findPutState" parameterType="pd" resultType="pd">
		SELECT SUM(EA_EA+0) CNT FROM TM_STOCKMGRIN_DTL A WHERE PUT_STATUS ='82' AND  RECEI_FLG ='1' AND DEL_FLG = '0' AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</select>



	<select id="findInstockState" parameterType="pd" resultType="pd">
	  SELECT EA_ACTUAL,EA_EA FROM TM_STOCKMGRIN_DTL A WHERE RECEI_FLG = '0' AND DEL_FLG = '0' AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</select>

	<select id="findDtlReceive" parameterType="String" resultType="pd">
		SELECT 	STOCKDTLMGRIN_ID, STOCKMGRIN_ID, ROW_NO, CUSTOMER_ID, PRODUCT_ID, BOX_NO, EA_ACTUAL
		 FROM TM_STOCKMGRIN_DTL
		WHERE STOCKDTLMGRIN_ID IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 修改取消收货数据 -->
	<update id="editDtlReceive" parameterType="pd">
		UPDATE  TM_STOCKMGRIN_DTL
		SET
		EA_ACTUAL = EA_ACTUAL - #{EA_ACTUAL}
		WHERE  RECEI_FLG ='0'
		  AND  STOCKMGRIN_ID = #{STOCKMGRIN_ID}
		  AND  PRODUCT_ID = #{PRODUCT_ID}
	</update>

	<!-- 修改取消收货数据 -->
	<update id="delDtlReceive" parameterType="pd">
		DELETE FROM TM_STOCKMGRIN_DTL
		WHERE  STOCKDTLMGRIN_ID = #{STOCKDTLMGRIN_ID}
	</update>

	<!-- 修改收货状态 -->
	<update id="editStockState" parameterType="pd">
		UPDATE  TM_STOCKMGRIN
		SET
		INSTOCK_STATE = #{INSTOCK_STATE},
		REAL_INSTOCK_DATE =  CASE WHEN (REAL_INSTOCK_DATE IS NULL OR REAL_INSTOCK_DATE ='') THEN #{REAL_INSTOCK_DATE} ELSE REAL_INSTOCK_DATE END
		WHERE
		STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</update>

	<select id="findDtlListByPid" parameterType="pd" resultType="pd">
	SELECT STOCKDTLMGRIN_ID, STOCKMGRIN_ID, ROW_NO, CUSTOMER_ID, PRODUCT_ID, PRODUCT_TYPE, PACK_RULE, PACK_UNIT, OT_EA, OT_RATIO, PALLET_EA,
			PALLET_RATIO, BOX_EA, BOX_RATIO, INPACK_EA, INPACK_RATIO, EA_EA, EA_RATIO, LONG_UT, WIDE_UT, HIGH_UT, UNIT_VOLUME, TOTAL_VOLUME,
			TOTAL_WEIGHT, TOTAL_SUTTLE, TOTAL_PRICE, UNIT_PRICE, CURRENCY_TYPE, STORAGE_ID, LOCATOR_ID, CAR_TYPE, CAR_PLATE, SEAL_NO, TP_HAULIER,
			FREEZE_CODE, MGR_SERIAL, MEMO, IMP_FLG, RECEIPT_STATE, DISTR_STATE, PUT_STATUS,
			BOX_NO, EA_ACTUAL, RECEI_FLG, PUT_EA, ASSIGNED_EA, SCAN_CODE, PUT_STORAGE_ID, PUT_LOCATOR_ID
	FROM TM_STOCKMGRIN_DTL
	WHERE DEL_FLG = '0'
	 AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	</select>

	<select id="findDtlPdByPidAndProd" parameterType="pd" resultType="pd">
	SELECT STOCKDTLMGRIN_ID, STOCKMGRIN_ID, ROW_NO, CUSTOMER_ID, PRODUCT_ID, PRODUCT_TYPE, PACK_RULE, PACK_UNIT, CURRENCY_TYPE, STORAGE_ID, LOCATOR_ID, CAR_TYPE, CAR_PLATE,
		SEAL_NO, TP_HAULIER, FREEZE_CODE, MGR_SERIAL, RECEIPT_STATE, DISTR_STATE, PUT_STATUS, BOX_NO, EA_ACTUAL, RECEI_FLG, PUT_EA,
		ASSIGNED_EA, SCAN_CODE, PUT_STORAGE_ID, PUT_LOCATOR_ID
	FROM TM_STOCKMGRIN_DTL
	WHERE DEL_FLG = '0'
	  AND RECEI_FLG ='0'
	  AND STOCKMGRIN_ID = #{STOCKMGRIN_ID}
	  AND PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<select id="findDtlPdByNoAndProd" parameterType="pd" resultType="pd">
		SELECT B.STOCKDTLMGRIN_ID,B.STOCKMGRIN_ID,B.ROW_NO,B.CUSTOMER_ID,B.PRODUCT_ID,B.PRODUCT_TYPE,B.PACK_RULE,B.PACK_UNIT,B.OT_EA,B.OT_RATIO,B.
        PALLET_EA,B.PALLET_RATIO,B.BOX_EA,B.BOX_RATIO,B.INPACK_EA,B.INPACK_RATIO,B.EA_EA,B.EA_RATIO,B.LONG_UT,B.WIDE_UT,B.HIGH_UT,B.UNIT_VOLUME,B.
		TOTAL_VOLUME,B.TOTAL_WEIGHT,B.TOTAL_SUTTLE,B.TOTAL_PRICE,B.UNIT_PRICE,B.CURRENCY_TYPE,B.STORAGE_ID,B.LOCATOR_ID,B.CAR_TYPE,B.CAR_PLATE,B.SEAL_NO,B.
		TP_HAULIER,B.FREEZE_CODE,B.MGR_SERIAL,B.MEMO,B.IMP_FLG,B.RECEIPT_STATE,B.DISTR_STATE,B.PUT_STATUS,B.CREATE_EMP,B.CREATE_TM,B.MODIFY_EMP,B.MODIFY_TM,B.
		DEL_FLG,B.BOX_NO,B.EA_ACTUAL,B.RECEI_FLG,B.PUT_EA,B.ASSIGNED_EA,B.SCAN_CODE,B.PUT_STORAGE_ID,B.PUT_LOCATOR_ID
		FROM TM_STOCKMGRIN_DTL B,TM_STOCKMGRIN A
		WHERE B.STOCKMGRIN_ID = A.STOCKMGRIN_ID
		  AND B.DEL_FLG = '0'
		  AND B.RECEI_FLG ='0'
		  AND A.INSTOCK_NO = #{INSTOCK_NO}
		  AND B.PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<select id="findRowNo" parameterType="pd" resultType="pd">
		SELECT  max(ROW_NO+0)+1 ROW_NO
		FROM TM_STOCKMGRIN_DTL A
		WHERE  A.DEL_FLG = '0'
		 AND A.RECEI_FLG ='0'
		AND  A.STOCKMGRIN_ID =#{STOCKMGRIN_ID}
	</select>

	<select id="findCustomerIdByStockMgrInId" parameterType="pd" resultType="pd">
		SELECT CUSTOMER_ID ,INSTOCK_NO FROM TM_STOCKMGRIN WHERE STOCKMGRIN_ID =#{STOCKMGRIN_ID}
	</select>


</mapper>